%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 928 469
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 928 469
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: PVKUVV+CMUSerif-Italic
%!FontType1-1.0: PVKUVV+CMUSerif-Italic 0.6.3%%CreationDate: 2/8/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (0.6.3) readonly def/FullName (CMU Serif Italic) readonly def/FamilyName (CMU Serif) readonly def/Weight (SnapShot) readonly def/ItalicAngle -14 def/isFixedPitch false def/UnderlinePosition -100 def/UnderlineThickness 50 defend readonly def/FontName /PVKUVV+CMUSerif-Italic def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /K putdup 34 /space putdup 35 /equal putdup 36 /parenleft putdup 37 /S putdup 38 /beta putdup 39 /upsilon putdup 40 /parenright putdup 41 /T putdup 42 /L putdup 43 /C putreadonly def/FontBBox {-1003 -354 1459 1110} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1C23F12D96A5609A922C3474BF8277D14F0DA8D8CFF10785FDAB2312685B89C3CD2FEFC21BE6CA0FF40646505392E53A8CF0BE39E768D74508A40C5F917007A169FF86E2D713374A6CB924A0C1A5E3C24B54AC8F5E8C2F0297C59E78BC7EEA8FF081FF59B6BEC29F29F9EACFD2A8213731276B166700FFBE29B5BD482E5ED271C340FF93F5ABCFD384ACD58225C34FC9675ABCCAF9A5A7C89DBE64483E89EA78E869839A2486D019238A0F7208795DB13A267ADC1105FD772B02C17F70F2567949C04A7CCC8F224B05A8F52F5A0B06BB3544EB7A7ECDD0C8342014CC4C2BB19FA8DB8EF457EE5FCA2FE4AA705B864335E60F4C9C1868FB0858E265D5D43834B9F88962FCD1D6EFB3C5C8D939EC46955B90F3E1F6249C536405EFF899D8FB229FC51D34BF9854577AB9448736B5FFA9D50D22CA4117FD62C2025E65F42A6039D86147C0E2706283DB5FE00945503862FC0E82E5300CB129C3EA24665C6DB71A4676D0221857FB64A801ED03007F90F004283D4679E1ABB80111C8F0AB1F4FEEFC3C4AD715A97E7268C43DFD62FBB56395309323593D746792001DA3FC4CF286F92131534C30EA6188A48A8C0BE12194C07230DFAB83C9EB2A8F6A01EA449490FA3604680BFEA3B6F6DFA819F985F9784A30556A6F60F89F5D1F64D821C42B8FF32055D28AF1AD0CAAB615C20D82B3968EFB19FBFECAEF121D72176109BB4E8049C543E059B0FD594B11703D23EEB0056725CFB23CB16054525AE861B57A52F0939EBF688CE50523F1F71A901DA75ACE09A8D08809127FE6E2B0FA15FF6397F96E1F1EB665821C77E927FF2A64C6BB9BCC5927FE072040EE45F44955531CA1A5028B90AC18ADC5268733E4EB350E9505F67A96A016E4875F53E49EFA3F204475A49DEF044431192FDCB92F556818503FA1C9C52A38F11563B9836CD0C1C03D488033DFAB38E75B36E16736995AEE19C46C9D629CDE7CDD8CE0C6F3E4B2FC25F4504CA372232D0A0ABF020D57FB0AE147685C6488D4C633CB0DBF1DF053DA67452520D0261E2909C06590E854D0F7C27AC2E50409DF2B92DF2B7188A8E030FC9169A8F250069BA6C5CB38ABE4522D24410F611234F281E0E0AAB247AB4EBECBB229C4467C874C70F1A79C91127FDF851EB25C40632FEEAB1D14A572B3E16445708FAADAED8499A9B34E2625BCCB6292EED39BF787A684E576FE80AAD6D6CEEAADD72D2A5F8093158818B1876CCA10EFC6D15B49EFF6E1B541E1326FD5B3A54C7786C2D336FFED74B120748A9F5F9B251A4787C1723C82B35DF1B35806740011E518E6D0FE3AA059660C3A6FBEC863292A838C2BA42703D2CBBF3421B803AD864134EB314B98DD7DBB8A568B037A2224125C2F11D16D2DB79D40D1C6471BE729EB79FC8A39B80726577D94546C50148264C1F3A3AF4FF11C96E066EBEC7C3468069E2FF42F5E49A5C2D9ADE77983FD7D6DC9B14C94E0ADA4AA353D75DC9710B5538FB6F33210773C1A6AFC75FB05E58EF8672DAE0B46CD5366E790D9E6475A62336042C6CF70A5C08E4EDA52083A7CDA4FEDD4142CBF966E226CD6A70DB25CA3DF363D37E7A95DC74059A1B93BC10964754B735807A6EE1BC4BAFCFB286F46C83DF40209C14AFB02FA5A76BA72A550DE19FA02592764039CCD53C16E59FFA97DBB894F5E17CEBEA94FA78AC38B8657A9658F3518DD3B6EE2A6E326ECF7DE8ECDE0D9B41CCC7EE0CA96EE3F964CE283DF710D6B117ADD67F375DB65F3C4F8602E9A2F530009E91BB4B05B0A071444001CA186204DAC3760D5D8285755CA0D0B38F6D43C1438AC81304E9DF8C812A686CF40D5FE98A1C4DB3CA98B450F9E61243085BE2E4C862AC297AC5D63BC0CCA487E3D1F136E0668EFA3F2ABDE4AB148A70C868DF410614AA986F914B98B24ADBDCE01572F98ABCB9539E98DA8ECEE9FF639973492264D475978D84F304934D141F6FCABEED85F65491EEB011D935356D086028A2FFAC267AA6EB4AF2FFEAA50842E7BC9BB181AD776841FBCCD7B956BAD2CFBA8DE6CDE87493D7FB78CDAB46974023ABB028C3001B00DF77363E33CAFD68390EFE236FD9BDC870157FD84A65B31598B1FA247CC6FEB57D149205A5945C56E3E3E2DE6BA5A415934498AB994F9E1A1295856E827DBE6C8EF5FA56FC5140F68D858712CE4132E8D2A81EDD623FB0C89EF0F6EC84E6DAC026E9A7D7576027F44BBA8646352356C0231AE1FCA3925C4B401582655753FB870D91D7D58C9D598C43C5AF2A12600654EB2B4C83B0AEBD6A87497EBE85D60D1A8F063567938910555CE53C830CAEDC7CDDE628B047173B442A9D93D93EE985629748C584F97BA07F29968FA62794D9EA13FD14EBD18E4F26EFA77765341A8FC7466D2B9A49F98838BB1F1CA27B180B9B3C7D3EE6A6587E809EADEE3C31EC68630AF5158CA5E41C74421F00A06FAE8915C0E603C54F73411DAB1E4E402598397EBAF8823B829815FB702DE1B3AF9D9C79BFCEBEEA04839CF3E2DFC8D930C7DE90D31DD61F48D392A32D4E7E47AC434ED3689E3D30D15CE3838DA4AA8948A76E56527B5B16B5F4353AC073FC4E6EAE4BD1A8A505D86206551BF4263BA99363FDD38B3EF39215AC224FD745522F6ECAE81A1E39AAECEB1CDFEFFF51610A9F9BB0F68FFF3D4448985643CC1AAFF145D0974912A151B12114E2004AEC7C4782B92DD380235FAA784234CD167EFDEA463AC0CAEFA5808A2F12FB9AFA759F1FA1852436858EECE29990CCDF5B664009722E7212E6C0F9F34E248F23D3FC0AB4FB9F3D50598D9D07A05B545C174C2BEF851AFFFE9ECA024EAA3E84494BEDCCB55927442B8B00FC725154C8BD9643861D525466F7914731325DDAE659F793DDD6812046F4515D914EB62DE23CCF07EA926E048DAE8E20870E96EAAE7D666499784F4C737C331DD736675ED54C158A8387BD849B57C61CB856F54B49F40581B55987E1E4FA775ED47C67D8CBBE2A3116C51F3674605307E0AD2970E3D5E769CB4053FD5FC524100176C42660490D8F0E8F2DE1F81EB95142C34BEFCED9D7232D56D964F84BF26BA21C8AAC4698B37B91323E8A9B8EFF5BCDF755C74F6386E7E9C05960FB31A09CB6A87245B4C1EEB5BB31A8CCBA22B9BCDA08C52EE795CD0DF032E5448648368FFE097D3944BB36C10803FB8EDCD75A40B6CEB6238139F12ED436FB1122FE6DF1952482E08C150D0A098165807BED44E0883CFC763E912B66D85AF4A0FD2ED32483B69480EFBD25CB7C67D93668B29B8A4E8752B4FB5041AB8EFA1DC29449F58E47B1CAE7313E946ED8F7C9C418C2FBEC613F606ED1DDA54704F6B6CD5398D90FB2E5D2D1C9E271EFBFCD5ED1F65BD7BF86757FF3BA9A3083CA54D2373C01CB19A76B4668ED54406C2440979F57EF75C7D5D1607A9310D2F20C93C7738A1B700E6121A7BD6A83C78699AAF477D3756B103140018059A73CD7623C1412099A0C682A9910A840C638241DE8D0DA377D7ACAD7EA8EA90DA3C83801B0FE9ED14A92F566FA4BCA0172407EC9543ED09911C0573C22DBBD579EC996CFACF6D707929C5B19802B1DE8DEF5A2710901D22802722C8C82C7E0058D6C6C9DFB0B9C8C17F3206851047A12B94F1B96246AB5CE6AEB736D62AD2A06D27DB5B0DBF1D41BC32092542B87413D46F047FAD82E44E1912B6305FEA086564FE4733366DD74E23C4464C98DE218A8C09BFFEC9CA5C88E96B04F15967E0F69AA5C68FCFB4175F1126DF7139EEE94468631B7A5E33668A69BA5B5816282A4C0C7F54C8F68631D053D4A31301075AC6C937622DD9F5A0E2A9ED9A80CD306310AB9940C9EFA3DA75799629C7D355686A4C117909BFB16D8B6DFD096C2382BED7DBC1310F6394C1BA5AC2EC0C567CAFF9F7846AA0433AB4DA36BE36BA7D86E457974F86CD646C67BFED815B1A3FE409A1686AC2017CB22790E305BCBBAEF2F8162481FA67842E05EC3C82A37D5EECC36269C12C1111A1458C645B21F7330C6CB1D2B9A463D08FC4EBAD48FFF62641632B97DAAD15DF979CBE2CC0D3E9696D1AB5FF89BDE1F0A5F12CF12824943675EE8A9E290D8B0AA6B42701368C6F67296B2B1359116A86BA6EB38C33BA07650274202CF79D0245937582B6DB008873535318D939BBFBD549748CA3B725FBB5245667075E3A18A247D6D22C21B17647ACDDCC5C0144A6D4F941B84547E1AEDF85742E8FF02090DF0EAEEB1F8A75BAFA16B628739DF525132E22EC72E3B31B987431FF513BFEE4E31BC861145EA53A7B92B04EA82630C84AD926E5DF6D7213746330D99AE308A41FA4221C89BF6F0D853AEF85350ADC42987DBDCF7884588CCE56E1B7809EF64BB76BBFDDBD177E774412B5F6BEB1469B4404E79BE961FB67EB20DB21686ABD441CE0F817D8273E434281F91519DE52588BE9E6E108E3B24BFB578E9900294771AD34F6BB87583D10471AB170DBCDDCBD9FB67B0F2B34009B6D394D6C2907F02C4C40C371AA86A6C999399592A66EEB863D92001DEA89F1382DE714B11A9C2CD3503C641A17DC81A80B39FB0385D0D3F9D6C440D5F38EE5D8220992B9AC2AF52FA825E2A926C7888828842A3AEE5BD91834EBE8A5CA0273181F4777737FB1C569FE3FD4B78CAB6C16F595AF4930C4194A2E2910A0CA4684FF479ED9FBF877C7DE32C7464B785D1B7A90AFA2C8D1A0C6282898A9673BE3269AC56F5E306360169532A423153857400D5A7B6EFF15C6180BDB0CFA485E23376AADFE9ABB57CF33AF8581031292CDC9F6E9FD61C96CD00A718F72F3E2C107F8E279DD3CF98A9EFACB7EBF6806E2E91A045E9ECFF136870BA4074F72E1EC31FC85E8C58700EEDC64D10FE34B4A1B1D32A5F38B885851116F2A9565E8CC749FD6FF0F405BAB65DC44C829FCEF0229764C2B5386DC98EAB6065317D2F456718D2A3CE5CD68A8219BC503140C7AECDDBD7875018DD4F2FAFB83E308E3653899566C8F682BFDBD12FB997472F0ABAC203263112C06FD6EF197910357447E14D1AC1430066A2ED329237CFBF3FCAF045B9D2F11A5C8C93292B7CF2DABFF7FE75E6FAE70795254E71698744CD55BEBF7C3503B53BE9B1A1A6B9AF1CAA4AA296653E9B1743E26544E185CB491306C8A80CE772CAB7BC66E3EAC3720BE2C4B6639BEB96EAF16A054383D91838D66D033756AE0688CA578F57B4A072D85115D0B1450BFD513DB06CBC289D5D57657C0522FBE47EB326B346FF66A8A425E02AFCD79597D5F21B4D186A50CF7A506C76B694F301825B38E2037B35ACF0B56880E1231FFE25E36BDBD768D2642391EDCEB50F9D290E010399D4E403D9E7CAF309B8C617953963DEE421E0B68DFE565BE63665967C66F326096D1F58A6AE5978C2006FA0FF23E416CACD945B81BBF89B65A2DFB48BF41E0FCB266309704574112C3B87C3C41AA7BAE027DF1D75D154B5ADAFAF1F66BCCE3531525D8F0DB0B3CF2C2739E3E63C6669365CE745BFB8819351FC9A7CFFAA0090EE5FC80E0CF62DC9EE0CB0B6ED94F50EE1CEE5B8748F8F9523D1F1C9EFF565E1CC4BEB152C97281B52FEBF7930962FEA4FC73A62C75303F8F0F7BDBB75EE40CFA6E8C38A5DDCE7BA0679B3721E08B71E6144377CE6C75E7A0FA6EF7B8F1CD8676C17F1B5A03520044C84CE92464700B96E1B1F7C448F4FC5819CE3B236F08963877161821B5BC5BB62CA27CC03FBFBE7D260E07A25E478B0005C4AF96B8F4CF7BB505FB7BD7C68DC7D0118BBD1C7A2F71AE1BCF6C0DB50555E1E0E30A8D00CB9147E1B7FA8CA685C96CA691A341C7647CE1202506C3A3EF20E3469A77A13B8DD5F7EBAD9EB94AA16641D4242E59CBBE23D84B8355BDFB56B50C39FD27FD0F207247B8969554385C3A2198AA305B401DF3ABCD7E2A1608F05DF1C7C69976FB339FA89BF15E530F5382B66B198311DB7FE61E57B3CC181C9071D855C00EA4B6F73EF8825923761150EB34EA9A92468AEE7E082CA35FB1CF71C51E6F4A9DD8128F2ADADF5EA3C249520BD4FA881D5893F6E79F9AEEEDDFA206F7572F5EBCD7F5FB485A42DD0DBE739AECE4F262CE4AEC34B4217D80B834D705730246522320A3770527A10585EF6EC184165E29716A1D4E9BFE055E66E337DB40C544932284463F4C12F4198AA0A26AF28C72CD0D049EAE39AB859E167847CF7BCD9DB1AA55076DAA29FEE948EEBDAAEDAFD9A96E880621D5B1566FB2F18EA79F72374723EDB2268F23E205B1ED84FF3F62DAA45A69B4E7D56A727B337BDF6337D26C5EFA7B39E8C8DBE09EBA25B37C547091D86D7BF5437E2DD8413315911DEB90EB9D79D9428947CB328BBDEB7701EE57D185E463C2831F5D627A4D0B436A220ECA14175A0CB7E18699D742B1D823273B04A8415A2314703AB082E692FFCE273CEBFD6827F655B6C0E16DBAC048B0ABCFB1E7F3FC676F07DD1A9514946C3391C542A82C3DEE080FDAD0EF35094B4A435F81FAEFAAFD404C52E0EA6D83258B9B21A094EA77C858504401F2A526D199483BAD591A61C2567C5C7C1F3BDCE4E2A815E756CBB8CF84108C979DC1396B78B537126667102FDB59E2CEF5C7949B04F736C395C22564E47C42A63052913BC2874DC456BD34CEE70BF3A6619A74C5FEC81F3DBFEDCF54C92CA618623E6BB0210248D2E2CA61ACB7AD4E0DC1C3E03B135554926E45490062FF48D607EE93B692ED1AEE76B23C0A8005B519A13778E9378F014C5AA818DBABC4F0D6D37FA9CEB8CE0F3AA95014BD4A0DCFCF7580AD08CD05659C7AB03CAC24CBE1C536FB27281B676F8A3EE62714690BA4BAA0254E6F2BB442AE9D8E9F2FB71DA4BD48CDF58F58CD68BB3B1ABF5A3061C3CC247F2C82C3B7D7E1D95311F9148F48277FD81F1390246ED705088475E866D60DEB03CB42DBDB965ED7FD53C69690C8B7C73AF12FA2FFFC07691013538365C598AD1575A56ECC658A02F1B0732D94C13133B0B0E1D8C0847107FAC8EAD37FB934E49D08A0E41EFA0E6776C24E69AFA1894FE7B5303037DEF42475B5B7873A288B11B388FE9ECFB6418BA9804FFE5D78D8E9D40329E5156713479EC9A11ECB82240CF2C02836A3828DBEFD530795A9F35B35DAB655ED11C7581F0946C741303AFF8FD1AC260B5F0D262F2A567497A27812D74E86C8FE5D97211C66323A148A15995DDD083F8D6D8815C6518C078706FA345634AFFAFB1E74D2692767EEFAA437A0C399C59784AE2B1AE42D1EB51499C1A0451DD6CF92DE9D7926EDCA88BF6F33CD5BA1E7FD5B2F21679EBFB5DB27CF8B828EA86F9E5AC9666240FA7781CED534E011B62705ACFC549D187415BADEC69058DC3437E965F5F8F39442DD0913DA53CD601E15681D6BC1BA776AF15E67DDEA7C7554FBAD948B3112EB434A97C743C9C1432E6B4C4A463CFF8D8C9F3B597AADC65E949F143E3991F1C3C91220FA1E3FFD373C6A4582C1A13831665EA72FF692A687FC6BE627E57AEBAE7C3CEDBE024660D7CED557399E9FC79201C4F4F68D940DF7090DC854DA337C266AFA3F48E2FD4D695C2C4ADCAB53C15480B3F58F3420A4738E3D6AFDCD6E205BDEDB551F1A612C546F0ED7D0EE3356DB5A6B3F2BB24E548B03CF189EAAB1F0CA0BA82EDF4384D83D737404A3C7B3B4AFDE1D4F46BE393A75DAA3FAB306B0546AB21D36E4FF8D63FD5CFA1183095866E36134670D348AC49C8B4E90D27B0EDBEA94D33C330F9F8945C5A528F27162813A9BFBDB5E1DD4FBFE4F3435E5F895FD6BA36F54DB5B4E4D9D4E4E63BA3180339DE1B3767EF15CED859C6977F5AA5A1491C731451A46AC39A1CDE6EFDEE841C1A041E945EDD9D7E02FDAC746805A634016E34F647FC10E2D687BCA8FA6C33F561A8DB8D1B936489FA3516117C8339FFD612EA59747054728AC84C44A716A38F1EAC8A9ED70EE1ADE4F945999DEE9FCD7176AC6C8697318580603B7689882BAEF5B472DE4D6AB773091F637B742873C239B100B6499BB55ACA799ED4DDD03EF959CFEA179E6AC2EAC2B3F98C430105C5902508FA818A1B89D6EA162AE5CFF0CDDA4F6EC599F3CDF72621666547B306FC404ACB111BB0CB06397DA8C3592E10D3EBEFB81F3075F989A73512C3580CC283F7EAD82FF230678ED23D61E780128030BB669FB4642B7763545C66F88B70D657C598EDB8C5E9EDFDF55EDEF109FF036ABC98DD53BCA516A84C639A9349DA540644C4F15E365A9E8942E5E62466B1D01134A3A1EC834DE9AFD40B60FD24F50D0F781A1B8E57A4D5DD1E32F1C1CAED1C939A1A3B9BEF476648F4F9E3F91EF49C3F89C0F8819DDD024A450B7D98DE6D5977D0271BC69F2C626A24E0E0E55908949409B207AE593DB16229D6280791870D71E5ADF19D042FDE8F352CA3F63DAED85A2A67091CA9AACC0A7863F39346F91568267D07663A9CB79B9B6E5B2FCD1CDA724AAEFE38E1B8B1C3D5596979869B682A99ADEC5ECEB73B0383F00C6599C489D9DA9FA6264A3B76C93661ADB36BC9E2A36587D3DCDB7480BC8FA07A5F740E96C497CDEADF3D5383634222E977377A91B903C72362CD000D14E988DB3FAFBEBC586BCB872E6E67E73E88379A84B13A662FE600FCC10D6E5E18D7D6AEE734EB2150C6E240420C6CA7980FFE75B99C6D07C641E31371A51A08EA7EA4E36164F369B53EA80E072FDC67C0DCB76C614F0C4F23DF047CB7F7EC0C84E04610EE3556F94778E3DF8B88E852D848A42782BA1DBDDC0F65287E610D97CDC3E1212E7F4A53C3B9C39E6B0E1DEA2E44135D67F2A13F1D86EBDBE30F521D59AE6BC48CC1E242011A687C16B9C23D76C683D9937BCCCE7545A814DAF593EA20150E9F47D08787A35B7AA6007FD994B38C19A5D921FAA6926D951692E500C226BE13DBC8B2FC4275FDDEA364B0E0D7E180A18C26FE7D40ADE0C262205ED8E856B7F7F463E7C57A9FD1D799F550A15FB08F0219DE10078A645A6EE1BB334B014773C12E97914A034FC7F61FBC774C781388CDE59891F85CB10A334CBF60ACE48E5365BED8C8B942698CAA31E04E2B8904F9D7924FE80F8738FBA425A9E6840C4C08496ACA33C63C791A30FA559E2AF8B348970D2123769C8E7DD7B4E12FCDCC540EE2E10AACFAFC98D35911F9592B816C7269AC3F64E728D14277D245676798E0B787891E3F119151B8CED4A7598C16A6F9DD6DAF1D542A59D788A51AB2CABE2422B7BA807522036E7EBAC703FC473583EF2FB1DD8E738E6160BB75E0506F06E78E8FDB8D36693059731CB22F696E424001162BA0ABF18EFED42A47BA64B9A8EDB4F0259F18D7C448174CD1CA5BA1BDB7CB1DC5C9D600A66985596F51083E578CD8949B5F9E60244B55FB1FC148BBF4A9DB0777673D7AD18541AD19A532548DED9F8832DC1CE2A490E1234998894B629C954965981A5898978B3ED75DEED2CED534519F78958F1928BD7F1E5E27B185D835EAF8E97E96A1F01037F071FAF3B42F9BAAD0E3AA2E0C2A7B2AF0EF43FF85B33BDE281EA761B4734D2AC46584A18920D25153D83F7C85ED80B45FC867C26294E63E08EF4DADE77AA848BDEB136C85028B995EF66524E5547596969ABDDEAE84040230E038FFF96686A29138DA3FD47AFF87DE44322180B561971B49BFE6C920D5CDDE2F3BDABA3BBB8DE370E2BB0CB3C646850108C59A02F1EDF4A831979BD85B6E0123CF92F53D52F875EC024CA61182043D0308505C5EAEAF4A46752A99CF7A70167440785C1091240FEDCA1AB66302E13E1FDDC4ED99F731304230E70E1774AB520E0287731B70785C23D595AE77E8480AA029A694DC26B4F74B48B1D4C60D1F80717484752A0C438DFBB3BAC8C39706195EC8687CE742D941D89D3C0B9C2856A1F3BC6C1F8E828BAD608A46C98656B1FD0CDEE4D93265640E881CD174E953BC396AC0ADC2F94FD042B78D5E2217534A593E85F34276132A42AF72D3323961DC6D97851FE1AF2FB460B0E5438A4B965A6D2178A727234EC29039820AA42F46F0D0859AC599320A73307ECA694A8A4C01148448B0C01A931A3EB66FA9CBB968CB44066367FD45120D9CD01EBB6CE120AA7870ACEDFF522FA500678FFBEC3C7E92BF546989C4DBB0AE9CC029212C7AE58E0A51AA78A2F10D9FCFD51EE55A23C9EEC00A51BDDF679DEDA691E30F79A4D8E9C3314D0C7BDF160B4378A138EB064093DE838C2C96079C731E8C8B11ABD22C15D0754999EE7FA1723362F5505C6ABEBE5EF90E53E0B8C4FC223A6A64613794FAF2BB96C57E913296C86679FEFF9CEEE5F0E4B501C3BFC0AE03DBEEE904B8EF4332718D780AA9759DF0A986E6C7F4397C5B6A193F4AA9754D55C0A865EF5118E1F0421D7F41690BD648D0635A07C447145B7FC8024866B32DC7D3B39E7E5FCBA0BDECDD838A50958B5D818AB06F9E3B1AEB8C753152E83F403800B13117911F7E27756526A854FD7B133938BC9650FBF5AC566D3CDB67B7FA365D90F73D4C66C937E1DA2D5D8FCD1326079E434C91E4DF65A58152693732BDFD9CC9FF788E79276712A454035310BBD5FE823B4E3A83F05C4700BEAD6F6CA7080468F7BDE3634C0D6FEC9AEF95F9B2FADB9A5584A295BF4B1BBF89C48B81D18705BF04E472D189500B024952FD8F247A8407C3DB9E0A480D30332C413F6B1190679ED5D38DDB82704E2E34871B9408C730A733D1108EB0FC834DE498C4FD85D1A956BC9EEE3FF89E7DB1E1CEEA2F88CE8D6FBD0E52183D9DFC4C1A86ED7C7737769898F13854F7E34C9716100B8B65223BAAE43F52BC550D1FBA5B5D2A5EAAA146CAA9ACC77D917779AB4FF12277DDE70DEEAE528381CD55F4EC278EE0E420305638FE873349A55C1763AE5E54C374F0680D8E520DC0C03F03889DE329C3433A852EB0B3EDAB9D86A3E9D572BB10274C48A29B3E4AF44A8C9337D9B26F62C4A7AFB2FC143EADD5E167FD2880351B49D9A9FC491639D3D40FCC17E696A02EC4B86D013E4E69AA23A5E73B79D7F04160C72EA886107A3EF0E1CF668CAE1D63192030807B95E0141317CEC9A1011511AFA66EC5888761CB574A27F69F1F7C64845421668832A5E7E3AEC1F425F8E814FC11A0FC68C7047DAF78D6C9B547C6DD12587ABF00BF9FE97AE27954326574E25EE62F05FDF6C538E85789F234CD03DA9EBADE46849411E3E3EDF0C7502CB83EA14FFC82C1F84DC31A8CDEA15970719254F41DD803320D88653C1E7395902618D59F266D76861E990DF06616E4CD0052E94724445601D5C65B7A3DD13DC7A12D20EDCE97FF5C6936E110C089FFC0F74671B59306B047CCA2B2DCB9B11E4CB7A23E461E1856BB85EF0F5458D4CF6DE4D6F23DDB8F47FDE2A35C6B945EBF4082142376BC9F072124B128F2B6310B0EDD4A74AB4CF56849E2B27C4679042B5FD41E4A932C6F96F98337B4574B1232108F8F6D7C5061FDFC0EFBF0AB4DC3DE0C9A79CDEE5F5274F4D54B51F2271CAA2D7310BD6B7966FE4DC2CC82F89A1C7CD9692EE2F0B8296E90F9E2A3DF928170783BD1667C26C4BC310A099BC5D3044C15FA51F02339231DA715F292680F8730B2C3EEFDC57540CCF80E2B122F07A33FDA6DF618A614890AC45245777121AE0D8FC0200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/PVKUVV+CMUSerif-Italic cguidfix
/F1.1/PVKUVV+CMUSerif-Italic renmfont
%RBIBeginFontSubset: WDKGMA+CMUSerif-Roman
%!FontType1-1.0: WDKGMA+CMUSerif-Roman 0.6.3%%CreationDate: 2/8/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (0.6.3) readonly def/FullName (CMU Serif Roman) readonly def/FamilyName (CMU Serif) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -100 def/UnderlineThickness 50 defend readonly def/FontName /WDKGMA+CMUSerif-Roman def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /one putdup 34 /bar putdup 35 /space putdup 36 /C putdup 37 /h putdup 38 /a putdup 39 /l putdup 40 /e putdup 41 /n putdup 42 /g putdup 43 /r putdup 44 /parenleft putdup 45 /parenright putdup 46 /T putdup 47 /t putdup 48 /L putreadonly def/FontBBox {-1135 -387 1495 1094} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1C23F12D96A569DC7827567DDB3B7B5348084D707F7F7A34B4CEAF3083B34FB39BA8DC5D42D2020648700BF22450D1A60177034246667EBAF1104FA6CA5924E5440DD24A39BFBBE4308249676207753F1105C46516C1D13EF845C3CF1FDE9B8F8FAECBA4BB50C48306410C6436E5A6743C7C064234185E507DCCDC4A3AD1E83755C34FED07F33793DF3427F6CFF23777B4A7EB895C4E6B1AE07E38B870D24A3EEDE166963E9DDE48BEDDBDF8F2FA792CC2A61671935311D7167F2B901AD9AFB89D463D813432F341054BC711FF578EEE1AFFC0C349F790CCC722B0F1710FD8CAD576EAA4F335D5001B8900850FCDCAECAD4D57CCA4F383424A230303B2C6BDE9B3BFD84D570DA1C0272B5FEA19F4F26891DE3ECDD9D1F810967C38A7A2293D2E334EF9DC224F57884A4BCB0E9628B9EBD4DF21127581B99F7BC5C5395B57C62C7BAD6BE38FFDBFCDC12C44C9F37A6AB193EC268E0E8D0C712C8BDA86DF511A21F587A848FE352DF8618F31419CB97F11161654BC7D1FABA283BE6F3D7E468D23EE751CB61A278CF0D1CE8040722752480EAE09EF687FFDEEFAF7E058DB7A107352E65570A2A16D0B3B22BF78B3C027638F0E27DF20AF2723A5A8E34CEDB9E3F01D45E71251CE9AF7C2D1852C443210087A8E2BE19A4768E5B229DB4D6B1A8F8AC039BAA8049DF6090E372DBF15E152F4B4507B864B1C8AD79A7B73D94E62ADF3117B7A06C9BAF618E5B20788180521B8503594D7B4EC121A774120D2E4D159E0E6F7F6B837769F1C243CFCC2F4AAE77EC880B0F9A2D77F91B3AD05A1D21D7C767D1D02D6FA0F0AAAD0FA78A263726AA241C61A49954F9D61293D28CD3DFDA85E10561A0EB0852F90EE834DF2EF740D801B720D893099B12594C566CF450BBA57FF4CFF26B288956C73810C547FB091D63F00002331059CBE05ECE5A34E1E92E6F86FDD1DF22CF975B76515B9E403D506720121A28D3C5FDFBFB24A6CAA6FC95F8A3264DF637C26FE9973EE03488B4440DBBDA2AC363F76E8E8586C6F3B07E0F12FD409D880B878EC8C936ABE5E64AFA413A05A8193F754E9586311A212979E93794D4777350B5FDFC61B9472258FE5B6BD070ED9732B7B6442F0075780302D01760BEBE44F92445D3DDEA17071A99D53FE49756D589FCCCBD7201F1F2C52020EB79264E5FD660CDF824261BDCC87ACE38AA3FED5B8F66E98C45C06D1FA3205D4B2A83C0F04B7786C219B4F5655D3697F49FD9890D977C52CF974EFDDCE99AE182ED8501A128D080B62B704273B2D0C561A5B6493427689C1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E0799BAB9B9BCFB29B73FC76EFA02F4F632690651DA836E0C12E5A8344B7F7198A838D495F72057402527C7BD6F365A0AE60127D3FCCCB6CFF6B1E5A074BFD7E13F3AEA2C7B88B2B5F00F5D582AC04BEBF127E8DB14B59F027502AF59E46E0063B792D357613AC8B3C62F9C231911168483E6D1CED24CE949B858B5BEF4EDE8385591021E52DDE579FD7830746D7141C17016BB61878CCC97BB19A1D394418833FFF459E18F12DD4080116F94D9EC1DDB5CC5785CC5139501A8EC7DF10B2D4B80D8D6DAD2C1255B76589DC236FE19132301CF4295F1064481276E8936CFBCB0BAEB866DC2271C73BAEC4A88ACF665CB08BF94BFC8C6A731290A4CF84FAB4DD2C907ACA5C17738D51864E90BE6A9E2515D47D35CA9314DF70528B6C2E413AF7622E80195339BAFC4164CAF6A6F328BB81728B39019AAD65187D34FA8104FFA9BE842A37C6ACFBAA52946140970E43BD1685217CEE47C590ABEBB28D7085C557159C2D3242A51945A018475FBEEDAFEF607E4A964F2E2D62F1529C2A7B560656D2F62D8F344BCAFA0085D02F5687853126F42E535AE371448310CD1AED9FC0F53BCCF1A8C62581896523AF9C0FC97CB0B9054A3A794B19F850B217B5B63A3C8DE4726EEB36E8CB8CE9C84E5246BF331BAD56E5266B025174BC4B1293155D296C023C931538BA8CFC157CE4398351CD24FA134E5741732FAE1CD38A0D8D3F728564E8E77CFAC013E2486C5AA21FBF8CBD8958BF2EEC78E516ABECDE09D75FD9907B43D902A9B52661BCCA98D407420CDF0E25AC404E737D9BF9EA2AB043B1775AF554AC9D1BD002333DA0A784679ACE50E82E9A46F9D214E58A4B33433844B7D46E7487646A0A35B385D5CD1588A2AD2A9C1EE0E2553C2122554102BEB5B4A21FD9060170D44ABA2E58D51F93608C35F43820056AF2D435D145476D80B97FC4715E7440D6B0CBB6170EF1CBB0E959CCBE669C620F432A6DFC2FB1596F472F943932BDFC845298688CF6043B2FF9C39146A92819EE3576964827B0E07ABADD058DB33CE3617AEA66F8DD709B25338C6505FC272B841AAEF4E3F6F57E66A5B454D95A6722A0CCBC67C6FF55F3531A7612184859C921ADA8F8F9EBCEFE423D5CA559FA1E43E6391785EAF9591C29CAE5547FABD5738BCF14A91EE5BA491AAA23396B11B7667CAB78F568A77E1FE8538D93FA2B7A20C665649BB2746C51730A06005D33AA5A05D544C0B0AA009F520541EA2349EB668DF4213969F62199A98F4901AD9643CDBC42AC07DF4F757218D78FFC7FA0D60CECE6DE87DA02286F69D4ABC33F5D475FF3C90833BC5141CEEF7418A848528FEEDBE20960BD14963A9E687CD5B253F642F6EE4B1F87EA944BBA88F2B822AFCCD2240F91EB322CC3D4889E284979C568791C42E98479840D39F2957C23AD3B0C2EF8B0A6FC1EA7246543CF628EA690EF1E6F9E8C2E284A832D2F407A9F6724AE881C624942AEA19CF39EFF12F7FB4CF6E75018C58E1EE73BB4DD5EFFB6316B52D528ABEFA274462B8D728E597E3D1907B12F1C8AA2A9DCAC3964BCD9E79CFC4D09229D62C032BF7C104229FABA75E3A2FEE7CFB355193F90CE83353FD458B88D3FC7BE6D1194D4043D555E6023BBE26B86BF261A98FE130C900D777A61A9066F5A9E262BD304AAD2A3460A71DEB273006AAE320A3D76966B1024F501DC9344D94A8CF06186D20301E6173F7E81FB360A404D5DC4437F73AD55CB47CB63CE758669B9BA74475392C5427B064D5FCA792D1D0032E500584A21D9A7D24856FCD5B85C56E5487A89997F124D165420BE51131D828484BC5BF2A0FA8860EE96E0D4F5E1885F423E58284A21717002BC69E4512B997FFCA97EA324B89F34A48378FDDD012367AE42078D66D302C90530DDF3BC9653130C96D96663DD7101D9C1335CE4E7295D864A94774C105EAAA07687F860B27CD1E856451F3881C984680692B58E63EF43751EBF35328762AF8B7ECF6F899277DA0A61DEC825384DF2863C0259CFA194E0F27ABC51B887E243FA47A02664051CDDDAE690A4F0E7365D13AFC7C770B4E305BEC928E89ACF2AAF7470209DE1F7C4B27B6BEA8FE58BDE9F2D11685F0EE06A72B0BF530B5C85D5D226F1DD2681CC70C54A8FFC568558D6CE8994A1C9F5F81387D9AC4E8DAB28F56750930B58BC770DF7D97C4430377BE0BF15AC60925CFE29D583971D5D8967D7E3FAFADA4FB293CF8598A9C064D21103652B14A8F2942C3975356AC60F41C2DA126566B82ABAE291E443224A1527033DFFC42117E5BC04DBC19C2DEA0D4FA6CFC303089539696AF48DEDC094A6F13DBF71F04A1B4542C3895DDC93C48083F94D1DF9110F747CB1D4A5A79BB2D726BCDA23C8027451A583B863DFFAD675E4AADF058AEE663802C19C92E66985A3492D7728FBF2037757CFF56BC97AACDD8093A5F573A04D5D86F52A10092ED95820BE7A8202C42E494B9C1BE02C48A0D01DC787B14D8425D577DCA654A5280D695CEF7C8C2C557F524470BEC009816BFBE6174129E6EB02572428A757E640B0461D80240EC8A8ED8C644BA4E09DCAFF3949BBE85DADEDEEA0E316733A45D4EEB729433D64B5AA164AB87B7E1E62603F1BE8C6609B8ADC2EF59A1BBFAB88A0B01EF77CEE4A76567CBD09711D1AC911F7E8E0B61248C819CC2051D63DD456209D120D2DEAE95827D4CD54588FB6C8264094FDD6D6C673F391DA6ED8C21C7A9B0B0644B29CBB4183BEA4F3093BE0257BDF7B234D41358FA620DB9FEC683E739B953B63C9275966B5BB6234D8D2F5B057425A43C19E89349F413E5CD1F1F4324E86C9D8DE62E09E9C846ADF5B06AAB34898F619C5FF547B60915EC3730B7F7218C2C14465FF32956939492CB1D97F57811E956BCAA3E0E9842F34AEDC86677EFF0373FC90AD77B98B048A19A71AC018E376B65C6C37C122DABE6090DC58F2A21E1E3420B86CC4C881499B71EF22021F404403050F823A77F6F3DDC6E0B89357049ABD80FBAC174D24DE9238092EB246D171AAE2E39237A7E2C3C9852F416A3C0EF63BF88F03864B5892B3D6AFB3C63F779D4730D13998A22CBF51D5EB13668071F8FA042916A6878E362BE6853B788FC4F842CDC406FE7989731C79C6F09E1B92FD3DE3918A37FA829FDB10623D1E682665E23CF703A29653A3AD96C865AE30851987EF051EB8ED730C7E3C4240ECE59790C2277B2152E6A9B8E06D52191AB03032D5FA9CF4CA1474EF67C1B3E3480448DFB187C17773DE1C81DDF97121F00A5206B7182FBB1E733EDAF10BE7BC259C1BE21E6201BABEB51678A3A4D91B1A0F7389C1299040C9AD0C7D1FED0AB766347A98CDFD42734AD1B3DC489431B88AA0AADCE99EFF119BE8BE4DE39B8BAB75C9956E498C85133472CBD2D8B332D8729D4C848F3A61740E9AEF47455EFDD9765EE083E120E1EDA7EE1F7FCC3EED8FD8ACE459823A5A5C5291F8A7932D52447FFDAAEFF4910A9B230B310172D0AFFD3A8E842FCF093698D116552DC3E4D3F2BF749D23AC4C4C9D830BB7925C4B0CF5FB89DA609B14C29921E8E6CA72C2D6FD3DDA751C9E0A926AF19075DBDEB8D64C29DD9786F04811D4C4838329F30FB71BDC845D4889D50380CF9DA3E8528F12EFCC3088E854ECBE44D957B3543DDDD88A5ACE0FB1F8526FEFEF4FC4929659ED3296EE29C24A31A0A4F60F947E7F5BA9E0556677341718B130364076010D9DB21D1D827C9550D0008971BAEF5A7BFF31C75D1B2206A0576AA379D86438DEB36DBDE3536814C03A3E5B0BE226FB84B9A8E2D2E2523B095461FD6D8B042E12172E927C09AFD6E0FAB9955EB640331C4ACB0B9F127D3049FEC6003D01D23B9043B1296B26C9C496791563BF2BC2F6F0BFF4777BF92EE59AAAFD310488E71249B6B855FAC871CE78A988EBEBA63C9ECFBFF1C3139D5C412831E79A6BF1F477B07B2EE04692157FF45AC2E0583B6361C516DF2F06A3A108D9B818060AE394599B21462CC5384AE40608065EAEA6C28EF60B5D0D9EAF771C900B0FDC81804A5F7A569E62CC3E7D5F60F3A9646838B93C362EE8D233DCAE7013861CD95DD1CDE923A4931F0021AE424A6744E7EDE1414CFC79331AE30983BE3EBC524DC648B0B278D90624D9B4B34B7F6B1852B11AA04627F2AE4B8661DABBBB53602603D1FA05C4BDE43425BCF019AD7282DD54453A1BFE920B82C0E546621BFD964106962035C67F1C0085168C1D5080345BCEA81A7F53A015328EBCD73862E1C5923DED1904A148D4F1B073E27A1DB27ADD23EC67466B43EC0596C9BDDAF5EF9A6A318C4738F4E4DE1E60C3FAFAAA34C703A50555DC1272E23402B1FE8AE08E3CC0D30176470FCFDF9F9E5A180F7E48C8AE60DE7421B9D73FAC51A11F3BE56CD05A62A18A1A1553FF589B1B6E838779952F5975C968BBA4E386C2E560472F96DD28654089BCB12B7321720F90D17B9D28E58AE055D10C7B5A6B6059339259225B02283C1290DA81FF52B6AD01DC0FA92DF3DEA27B83E5447CEF22B6DF5E242A167283FB1B54B7160A38F197C09C4A9AFC1E38D4274FD23EBFEA47A5C259A428B51C9C527A1CE9A490E442349F4BE2D68DA4BA8D85BDFC10AF5AC3134558A90156DF97647B801DD0F4F4D938B40DDB8FEF5FB3A03E271766695746B235BCB568DF2ED17E379FC7737481095B764F059212739D10E0DE36A8699BEFFE79FFEC88DF6FD10CA51AA13517FF5E4C78C6E4DBF882EFB4F8F9BE1AA7979BB9D4170E7A10D2EDD3953C21107848E8A11C9B3ECCC60C960F38DAAAB86EB26E0D0907EEDDE3C2281D35F821EB37AEA803CB6387C9A1548477D67D814B0751FB06661B3A047DDADEA42DDDB3F19BF75515DA8769958EAF3558E21912B758775A92832E55EA3188DD0C1604B892ED8C76A3E4D332927B4198BF24FBDCC108F08B8E304582AA5E2150D55DF263338A78EE236C079FBD3569E354268DAD487A33AE01060F7A38E67FD73FB174E94763C38C56E4276E611E3CBC04CB2956E8FF5D50C82C64C28FBEED5FF2DB90A41BC8C31E1ECA443BACE4B33018BE7D3BF355A52828744A55411A61130F65C1881B28E8489CC4904A468A24FB98D4B9D80E79A99952F6D3086969EBDB28E7AF56D1B80631D9A01D8B0C66BFFB68D3A510366DA804739EA7A4650A67E75CEC132798F9A8BCD9E452E28A67679E6A92D2E2A85503EA854CE3DA1B7A3157803545F9457EBF7602C18280CDC3227AAB8E551140F0DA1BD13D2BFEDD9E488809B7E0DC847A1F217E19B678D2D638288CF10A6B1023D7348ADF29D35142EAF689F659D6FB9354A5392C9D5FED55ACE7FFEF05CFD42D4A2A60A8195279DCFAACC03B55030CB4238C52E6F94817F21950E3FCB4AEE1C6B70428E2A139E6CCEBBAA5DAFFF2D8AE86E93770DD1FBDAA16908BA7A59B84807C1D8ACAB311E78642EED43FC8D143FD00E100B881DFA5E7EEFEEF9D2BE4A19ADF82A93C6FB68B98E4751A1A210BFDE263DA1435A03617FC4D2F62A23ACC3A0246360CA7E661FE9BF490B2D08E46369DA7A0C0E0B73A4D69F1170DD224CB8F5A341529B34F243DD2FB287835FEAA850BCB61A3DE84063DFA6A1C2231A09D26D5EF9068FC85EA85A9129338B9CC873425D612AC28B8189611FE4ED9B86BA2AC00D0CCC0FB7BEC9FF10BDC99A48F6023308074C050798F93E8C121EE0D6E3DE118A741FAC4DED36847F2E2C6CFE04A788F368CE5BD28B92DBB99B83E941D047CB86C4EBCD568E92602C287F3714E1EBA67FAE7948F9CD68E27985AE9BF982713E054F379EF16133958E95E367F71C75A24512581A888EDFFC20DA7801D4FF1D35DEACED350743D11AED3C00A5DE3783BE8DAB3A05B6CDFE7B2AF6743297BE970B2C6CFEED2BF7FFD22D31F59F5E153413650CA4174FAB35747E37A002DF804F4BB548990C8FF895155B7A237572FF41E31BCCA80A0C91DFD3F23BE1CAEC426132D855E29416FFCA0D04F2C20AF6545E0D7315A36A87BB70BE9304396ADF622E7106A9675760B138CFBAEEE576A6F727F75F23BC19BD414DA85DF9E895BDE2E155125F54A1915AE981B4F3FCCF4576EE5C70439DBA2020E7D588F3953F82B0054FBBB9C6F72C34AB5CED3756DAC35EAFA4773371B961FAC3A3FBFA5243D45081086084415407BE607187B8F6CB1426117FF4809DFD081185712E8091A197B2A2E64068DF1FDAEE4B57F2F12827F75CE848559943C9CB2CEFD181D5789EDFAE2BD9ED269E9EDD9D35C51AB99EE8564FDED8FA980E74A661C484EEE4B93D521B73C62C176A3289F182220B4A2DF9C116B9DD45559B474647B0203001E8942A2C4DDAE2F4FCB3DC6F5867293A6C19EA0E1E4A56A6A8606B69882753107FE0050BE31B842FBF9BC021B1BD581A79F1D9A436073E6918102C22032BCB90D6F4F43E53837E34114B522275E40DC7D5249821589D5EB3DF5B5C1DBE600E4722081961A7746653314BB34F30DC4D9FEEDCCE776AA5B58985ED95F5349B4E6349A99F45F4C1134DC6759E4A3C21AC6BEB7554C599D83A607A5BF83A37F727E698EECC57D39C39F8EF4E57796A69FED7B6C318F7B21F3C2D0D2ED22E3740106E04B4623EDD9332FD12A146027AC73DE74C336CC35E5FA9E5697501FE41447C2944D35418E9E95A1088B1E992A211B32CAF3BC029600E0CA5542A08A0F20C70035A745F9998EB614F040B07B9EA74FD3B43A178C86F9A97423815F2576EDAEB54A44CB7F50E79B62C4F6DE1AC4D41627A0A12B2789525D02F13EE5A6626AEBA834DB1FC0D26688E1EB57AC8CCFED6B057856A388AC8F5A876CF82C186DC12064EAD34BF39B3C6D6754A1EF9828E17C7ECFFAF85013BDC63503C3D5795E4CFCECAC6E3889E86AB9C6B8C241E276039CE96B15546621524B5861D6BA2CD2900E95C991FE6A577AD87F8C51998210C94604F12AC2A5942B45E8C3883D1AB623CEB1326E5046C45B784F83BD645095C5916731B5D41B419212FC68AC20930D814C6A366527FA903858A8779C55567A384B5F172561A20B77C1210E201BBA9A805E18A6803010908FBC3D245F2695FD69DD2EAA7ABA5942E6706D5D84CF60525A5768DDB9EF67A2687A56CA6BEFA2F2732CD9991B89ABA0F8DC28D4968DD33ACF71CC285E0241B13603EC08D774037C7CCE6344496C6B6EB28C3B469084F415C710BD261E3E84E6C21386DE349D4259A37141E27811C6B33E969686FBCD42ACF0D8D631854E43669F8056C37A6E6021346AB6F9704A9E99D80804E47A1114F8F35B2F6F46464363F2DE4D8AF0B52C94B66740CEBDCB1E841E19A61B123183D08E338AE7BD487A929C9CAADCEC3861A6135B6946DD21FFBF272E077A15D97826646DBE661C9F8F4677A5AAFEC4753E263601E13CB0D60453BE67666387FDDFD7A32C170FBAA562AEC13CA28006CF63849F9DEB6D32EE1B35D11FAF804D732E453F5484DA63EA2794E72FD654A3FA5698E7AE488B2E2319A0F016ACD018EE2E4AFB0FFE7CA98226D3B4C8D648F3C623CC42B7C0B2E36CF32890861E327533BC1A3EEF53B03F0C1558C65A9C995CE9981176939504F91A9B6E0C5244A213455AFB36E3D2CD479965C3F80D8149BE5781280196E83D2F0A7C01D5B2F8DEB9AD47979B65F65736E446FB5C2B794F76FF671E8A2BEF16D9A256A8B891C4B1DDE3AA63BE6D452C925B0A5789CB8389980C0520F1D0AB1D12EF44D1EA146F05DD5B4294B5B23B2B345EEF21B68816ED366963BD57A5F5D5FB03E9A2AC8D12F593959C9A1D20BCD1ECA1E7BBC7CAEA6824E493530D17127F84AB99993CDB75F71205FCD17016DAFAFF01861157095B138CF9BE329DE5D3802BA26DEC8C3319772C53DCF20BE776706DFB9AA29339F858812BC1DB43E86EC202C4DDC01DEFF78EBD97F40F1B34778F7D752297A3D3A4E54BD1BE2FC316D318BC36897F899958F4E5B3988AC775BEB967EA9C50CDED1A623DF9E02942606FCEAD074748BCA852B8D194E18FFB1F3B4C7288B8B570026C0B19A8AD55279304C6346E41D0C93CBC5E9D5213ACF59B81296A4BA3FEDAEDA9DEFDFA5509A3569B95384F1ACA26D014F8B05A2119C33C2F30B9CFC8AC29AFB8B73F06276E564B80B98B57453864D315B058A58FCE59269A66C18A6B0147D3F76EB13E1269E6E9AC2D056775F3E6E8EEB26D6E2B4B8B0618836D7A99757886B981B990C9AEC00E56E577BDD0AF7C86B384A0F8CDC2D8611E393C981D3588A2E3AEBBCB9D5391C6A2610FD480B441F26DA6999C97D433AA0D0AE95309E44FD12420C81CEEAEC74F8F4D2587050084F10C54B37DC3B8621CD6E93E79EBE0F86B340F8FF5D77CC46ADA9DB5CDE35678AC5161A09AD451836310F24D50391B55BE01D9A096778CDD08BA91B07FB382FB555973DCE5A9AA849609587AE5A9F0D8C3C6619AC125490AF3543ADAA309CBA69B5A51E4B30E3E6B664F04F6B67255DF8BE27570ADCB5EBB596450D9C38F4C4931C032D66DC46569407D07A3FEF5CE2056C6082FF128EB5E15F982FC7539F1181A711371C45D55AEA40B278A0FEE24E26243C62A070C83A8B864C66D384C57254C51EEC72DA4194FDFFC740D6B74562B8D83C2B051DCB5A87342DE9CD2C0741C16A05ABF135B7604DBEF6A0E16F94C1FB18CC4B968D705F728C0B46CC460F801619471B692EE63B8F9096FC70285F7E7F741770BE7D5AC5989E41C458F21FCA6C67B781B2CC0A1543A6FCFF4E193110AC4AA5596DB728C05D7552E29FC23FE10736703A25B05251B1CE1AB784FC1786DA15946E0231A25419E469FF139E89CCAE8ACBF8C9BADD1BBEA3CEA9ABA28AB4B3868A31EC7493B9574B6A1A4F86DD5755FD580E88E853B9C22FD67200711CD22D849C56AE1563D7DCAAE4C690E26E2DAE768A3529DD6A51E8E44BB990B4EDDADC39FA5DED9DDCD30D70310004C252D0715D4CCFEA4BFC943E821268DC996277AFF92428248529EF168A8F56E7EF85A7B1B57D119FDD803ADEB073E26D5A95DAE0E6642D5EBEE04BF166CA5279568D3A621C66EE88B30DE3B3E9668DB57B0DD805165EB23553D07AB00A05AE43290559D6F3ED952A8E4AD5624B599FBFBF369B4CDA848CDA1C6C66DB88A7A54C7E478540037B7897506B39EA390ABAD1E67F502498ADE870E83642A2DD812DF51FAC9CB6D778DC3348E07FA8E426B11E6A7FA24C9EA8FB29AC06D3F83BF4EC8673DC54EF6509D0AC4E22101A392D3F50A0B84E43CB121C80839902BBE1C3E64FFFC3586C407AF8CE7E9CC0058730EB623F566BAD7F6A88BC34299146BC65BF286CC80A6E9F1CB4B70A38970DEFBBB4B0859042CD421F1E09A198EB699BBB0C23B61F1B1A4C7D45D1DEE0439D33E551D5C39B73D967D7094747DFFE55503C8B0744DA0901BD59E02533646FE5124FF7C8B8CD19B2C994702098F952C935ED5A0E8DC4A1C038E4241C17B17FA1B528FB650174D363B1EBDF4A320C0CE885FD9BECFBA8FD8DEE83DAC1F8C0F62DC184AAA9F33565F1BB6ED998E9035FFAAFC2775459B025334745E5F3F64BBB8F8C9D918AEFBCEC22D36B0E842FFE568918E74E1CF2FA639052C4C2C45006EA122CEBCCB5B060980A4E8993129B069306374751D3F9584FB8D6740C480672C1C6692DBDCFB929F304F1259838884D0B2D6DF7514A35B88724C14891D2FF3D950BC19F4BA9D7A8BF0161850B889E4200E1ECA56D7997FA5C09BB52A6EDBB26305F84117CEFA9B3FDEE25A7E3547BC021D73EC17BB8C6F619DC2B98B6ACFF7DAE607A3AF3EA622BD68437665674D22CA10699F5F786DD5295FB6A46FE323ECA3AD7CAD51070404493196C6F9B63179045857AFC4009E803B42A257553B3468FD971F2933DB89E317DE3AA7500D05AB2A243087FE1C7E45A2F57EABDC36D073A709F955FFE7E95071DABEBE76B0ADAAC01F73395F7F2FA8D31EDC3ABAC7D2AFF1D059BB6A10753C677A1C570875765B563D9DD11EB789A1878A8DDFD9FFF2D122B6BBBB0DC118485B64DAAA0E042C5FB7B7922D5BD484D79079349608123119F168BAEE1174829165AE1ED0FE681AD652FF1B6B9879E724F41D381279B687C82AF5C7497A50516F5CB3C462975BFC8FC178B3274531745E326A8C2A5D35EB4DB169FD4AA6A667800F9891059287AA6497168E0747AAD10584393751FFE6E741B940A1EA64DA15C28D5FE32576F1F7341D06A31FA9BC3605D3B8ACDB6F62A736DAC086FA2D07BA57258AAC2CD4ECEB730AA558B442A9B17BE350F1EB91D5C6F22D3CA2A91DF5242A36E834EF7C84539AC17026FC316D861B0E313E938F6B893AB53760B2D24C002D519B87A9EF6DAA28B5C3561578A92213144C7D7CF2A64E29B874B7D449DB2D9970966701921729A05D7FC426094E1B466D72162EBAB1AAEF7A93D6C18693C334C96C76662DA44FA95CFCD403D851A649E61AE50E5BA724ED12AB9D034CE61556C7B44194C4ADF8A8E54BCED2A6C6948A4383C5D65DFA4E00E3A698AA091B60705FB34DD435407039E2F628BB51DFAA5A593A2C69153BC86FE567B79463B075966A602F87C71BD26932AEA17D8B3297F34D853B68D84DE22EB7B5FF4D6A4E414A18F461B3C87D7D297D91BE52363831C0093C2DBAB9DAD81B8BFD970CFF24D478A31D701904538F78BA300C1658AD3904DAB327BD9304C628792B7386C2BE41BC7F10E852FDC366337EB4FA0DF150A330CA45E51DFE0D7835EC03C83185FD3135ECCC2F51BAC3568C39E6CD36F2111DAB9A594D1DF8D1BAD262CFD6D92236ED7298DBEB9A295F22A67C08AACA5024930768E1AFB5800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/WDKGMA+CMUSerif-Roman cguidfix
/F2.1/WDKGMA+CMUSerif-Roman renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.84396261 0.84396261 0.84396261 sc
q
545.62671 118.0293 m
651.26367 118.0293 l
657.89105 118.0293 663.26367 112.65672 663.26367 106.0293 c
663.26367 48.536495 l
663.26367 41.909081 657.89105 36.536495 651.26367 36.536495 c
545.62671 36.536495 l
538.99933 36.536495 533.62671 41.909081 533.62671 48.536495 c
533.62671 106.0293 l
533.62671 112.65672 538.99933 118.0293 545.62671 118.0293 c
h
W*
0 0 928 469 rc
528.62671 123.0293 m
668.26367 123.0293 l
668.26367 31.536497 l
528.62671 31.536497 l
h
f
Q
q
270.41043 118.0293 m
376.04736 118.0293 l
382.67477 118.0293 388.04736 112.65672 388.04736 106.0293 c
388.04736 48.536495 l
388.04736 41.909081 382.67477 36.536495 376.04736 36.536495 c
270.41043 36.536495 l
263.78302 36.536495 258.41043 41.909081 258.41043 48.536495 c
258.41043 106.0293 l
258.41043 112.65672 263.78302 118.0293 270.41043 118.0293 c
h
W*
0 0 928 469 rc
253.41043 123.0293 m
393.04736 123.0293 l
393.04736 31.536497 l
253.41043 31.536497 l
h
f
Q
q
810.27203 118.0293 m
915.90894 118.0293 l
922.53638 118.0293 927.90894 112.65672 927.90894 106.0293 c
927.90894 48.536495 l
927.90894 41.909081 922.53638 36.536495 915.90894 36.536495 c
810.27203 36.536495 l
803.64459 36.536495 798.27203 41.909081 798.27203 48.536495 c
798.27203 106.0293 l
798.27203 112.65672 803.64459 118.0293 810.27203 118.0293 c
h
W*
0 0 928 469 rc
793.27203 123.0293 m
932.90894 123.0293 l
932.90894 31.536497 l
793.27203 31.536497 l
h
f
Q
0 0 0 sc
q
0 0 928 469 rc
1 0 0 -1 98.198738 236.17578 cm
/F1.1[ 25 0 0 -25 0 0]sf
0.091499999 23 m
(!)s
/F2.1[ 20 0 0 -20 0 0]sf
20.2915 32 m
(!)s
/F1.1[ 25 0 0 -25 0 0]sf
31.2915 23 m
("#"$%)[ 9.950000 20.150000 9.950000 11.200000 0.000000 ] xS
/F2.1[ 20 0 0 -20 0 0]sf
97.591499 32 m
(!)s
/F1.1[ 6 0 0 -6 0 0]sf
108.5915 23 m
(")s
/F2.1[ 25 0 0 -25 0 0]sf
111.7395 23 m
("")[ 7.950000 0.000000 ] xS
/F2.1[ 6 0 0 -6 0 0]sf
127.6395 23 m
(#)s
/F1.1[ 25 0 0 -25 0 0]sf
130.6375 23 m
(&)s
/F1.1[ 6 0 0 -6 0 0]sf
142.7375 23 m
(")s
/F2.1[ 25 0 0 -25 0 0]sf
145.8855 23 m
("")[ 7.950000 0.000000 ] xS
/F2.1[ 6 0 0 -6 0 0]sf
161.78551 23 m
(#)s
/F1.1[ 25 0 0 -25 0 0]sf
164.78349 23 m
(')s
178.7085 23 m
(\()s
1 0 0 -1 240.91043 361 cm
0.2915 23 m
(!)s
/F1.1[ 20 0 0 -20 0 0]sf
20.491501 32 m
(\))s
/F1.1[ 25 0 0 -25 0 0]sf
35.7915 23 m
("#"$%)[ 9.950000 20.150000 9.950000 11.200000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
102.0915 32 m
(\))s
/F1.1[ 6 0 0 -6 0 0]sf
117.3915 23 m
(")s
/F2.1[ 25 0 0 -25 0 0]sf
120.5395 23 m
("")[ 7.950000 0.000000 ] xS
/F2.1[ 6 0 0 -6 0 0]sf
136.4395 23 m
(#)s
/F1.1[ 25 0 0 -25 0 0]sf
139.4375 23 m
(&)s
/F1.1[ 6 0 0 -6 0 0]sf
151.53751 23 m
(")s
/F2.1[ 25 0 0 -25 0 0]sf
154.6855 23 m
("")[ 7.950000 0.000000 ] xS
/F2.1[ 6 0 0 -6 0 0]sf
170.58549 23 m
(#)s
/F1.1[ 25 0 0 -25 0 0]sf
173.5835 23 m
(')s
187.5085 23 m
(\()s
1 0 0 -1 377.81793 473 cm
0.0515 23 m
(!)s
/F1.1[ 20 0 0 -20 0 0]sf
20.251499 32 m
(*)s
/F1.1[ 25 0 0 -25 0 0]sf
33.7915 23 m
("#"$%)[ 9.950000 20.150000 9.950000 11.200000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
100.0915 32 m
(*)s
/F1.1[ 6 0 0 -6 0 0]sf
113.6315 23 m
(")s
/F2.1[ 25 0 0 -25 0 0]sf
116.7795 23 m
("")[ 7.950000 0.000000 ] xS
/F2.1[ 6 0 0 -6 0 0]sf
132.6795 23 m
(#)s
/F1.1[ 25 0 0 -25 0 0]sf
135.67751 23 m
(&)s
/F1.1[ 6 0 0 -6 0 0]sf
147.7775 23 m
(")s
/F2.1[ 25 0 0 -25 0 0]sf
150.92551 23 m
("")[ 7.950000 0.000000 ] xS
/F2.1[ 6 0 0 -6 0 0]sf
166.8255 23 m
(#)s
/F1.1[ 25 0 0 -25 0 0]sf
169.8235 23 m
(')s
183.7485 23 m
(\()s
1 0 0 -1 -4.8129778 105.17578 cm
/F2.1[ 25 0 0 -25 0 0]sf
4.6992188 23 m
($%&''\(\)*\(+#)[ 18.050000 13.875000 12.500000 6.925000 6.925000 11.100000 13.875000 12.500000 11.100000 9.775000 0.000000 ] xS
42.584217 52 m
(,)s
/F1.1[ 25 0 0 -25 0 0]sf
52.284218 52 m
(+)s
/F1.1[ 10 0 0 -10 0 0]sf
70.159218 52 m
(")s
/F2.1[ 25 0 0 -25 0 0]sf
73.73922 52 m
(-)s
1 0 0 -1 263.43347 106.60078 cm
15.786718 23 m
(.&+*\(/#!#)[ 18.050000 12.500000 9.775000 12.500000 11.100000 9.700000 8.325000 12.500000 0.000000 ] xS
39.374218 52 m
(,)s
/F1.1[ 25 0 0 -25 0 0]sf
49.074219 52 m
(\))s
/F2.1[ 20 0 0 -20 0 0]sf
66.949219 61 m
(!)s
/F2.1[ 25 0 0 -25 0 0]sf
76.949219 52 m
(-)s
1 0 0 -1 534.26031 106.60078 cm
26.199219 23 m
(.&+*\(/#)[ 18.050000 12.500000 9.775000 12.500000 11.100000 9.700000 0.000000 ] xS
42.584217 52 m
(,)s
/F1.1[ 25 0 0 -25 0 0]sf
52.284218 52 m
(\))s
/F1.1[ 10 0 0 -10 0 0]sf
70.159218 52 m
(")s
/F2.1[ 25 0 0 -25 0 0]sf
73.73922 52 m
(-)s
1 0 0 -1 801.98132 106.60078 cm
14.199219 23 m
(.&+*\(/#)[ 18.050000 12.500000 9.775000 12.500000 11.100000 9.700000 0.000000 ] xS
/F1.1[ 25 0 0 -25 0 0]sf
96.149216 23 m
(*)s
/F2.1[ 25 0 0 -25 0 0]sf
111.82422 23 m
(#)s
38.124218 52 m
(,)s
/F1.1[ 25 0 0 -25 0 0]sf
47.824219 52 m
(\))s
/F2.1[ 20 0 0 -20 0 0]sf
65.699219 61 m
(0)s
/F2.1[ 25 0 0 -25 0 0]sf
78.199219 52 m
(-)s
0.59215689 0.59215689 0.59215689 sc
-0.70710677 -0.70710677 -0.70710677 0.70710677 203.44519 184.90707 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
-0.70710677 -0.70710677 -0.70710677 0.70710677 352.89645 309.91098 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
0.70710677 -0.70710677 -0.70710677 -0.70710677 66.479324 152.80562 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
0.70710677 -0.70710677 -0.70710677 -0.70710677 66.479324 274.8056 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
0.70710677 0.70710677 0.70710677 -0.70710677 210.25848 76.817802 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
2 J
0.59200001 0.59200001 0.59200001 sc
1 0 0 -1 142.84184 78.400703 cm
0.5 1.5 m
82.506096 1.5 l
S
0 J
0.59215689 0.59215689 0.59215689 sc
0.70710677 0.70710677 0.70710677 -0.70710677 486.68869 76.817802 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
2 J
0.59200001 0.59200001 0.59200001 sc
1 0 0 -1 419.27203 78.400703 cm
0.5 1.5 m
82.506096 1.5 l
S
0 J
0.59215689 0.59215689 0.59215689 sc
0.70710677 0.70710677 0.70710677 -0.70710677 753.18866 76.817802 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
2 J
0.59200001 0.59200001 0.59200001 sc
1 0 0 -1 685.77203 78.400703 cm
0.5 1.5 m
82.506096 1.5 l
S
0 J
0.59215689 0.59215689 0.59215689 sc
0.25881904 0.96592581 0.96592581 -0.25881904 473.81699 137.59528 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
2 J
0.59200001 0.59200001 0.59200001 sc
0.86602539 0.5 0.5 -0.86602539 414.64099 105.25778 cm
0.5 1.5 m
82.506096 1.5 l
S
0 J
0.59215689 0.59215689 0.59215689 sc
0.25881904 0.96592581 0.96592581 -0.25881904 740.31696 137.59528 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
2 J
0.59200001 0.59200001 0.59200001 sc
0.86602539 0.5 0.5 -0.86602539 681.14099 105.25778 cm
0.5 1.5 m
82.506096 1.5 l
S
0 J
0.59215689 0.59215689 0.59215689 sc
0.25881904 -0.96592581 0.96592581 0.25881904 473.81699 12.615183 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
2 J
0.59200001 0.59200001 0.59200001 sc
0.86602539 -0.5 0.5 0.86602539 414.64099 44.952675 cm
0.5 1.5 m
82.506096 1.5 l
S
0 J
0.59215689 0.59215689 0.59215689 sc
0.25881904 -0.96592581 0.96592581 0.25881904 740.31696 12.615183 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
2 J
0.59200001 0.59200001 0.59200001 sc
0.86602539 -0.5 0.5 0.86602539 681.14099 44.952675 cm
0.5 1.5 m
82.506096 1.5 l
S
0 J
1 0 0 -1 66.545341 184.82417 cm
256.68356 48.632812 m
256.68356 0 l
0 0 l
0 48.632812 l
S
1 0 0 -1 66.545341 310.38361 cm
530.72668 171.63281 m
530.72668 0 l
0 0 l
0 51.632812 l
S
0.59215689 0.59215689 0.59215689 sc
-0.70710677 -0.70710677 -0.70710677 0.70710677 480.89645 419.91098 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
0.70710677 -0.70710677 -0.70710677 -0.70710677 66.479324 384.8056 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
0.59200001 0.59200001 0.59200001 sc
1 0 0 -1 66.545341 420.38361 cm
796.45465 281.38361 m
796.54517 0 l
0 0 l
0 51.632812 l
S
ep
end
