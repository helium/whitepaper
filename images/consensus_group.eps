%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 750 593
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 750 593
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: BFSWLX+CMUSerif-Roman
%!FontType1-1.0: BFSWLX+CMUSerif-Roman 0.6.3%%CreationDate: 5/1/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (0.6.3) readonly def/FullName (CMU Serif Roman) readonly def/FamilyName (CMU Serif) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -100 def/UnderlineThickness 50 defend readonly def/FontName /BFSWLX+CMUSerif-Roman def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /M putdup 34 /N putdup 35 /C putdup 36 /B putreadonly def/FontBBox {-1135 -387 1495 1094} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1C23F12D96A569DC7827567DDB3B7B5348084D707F7F7A34B4CEAF3083B34FB39BA8DC5D42D2020648700BF22450D1A60177034246667EBAF1104FA6CA5924E5440DD24A39BFBBE4308249676207753F1105C46516C1D13EF845C3CF1FDE9B8F8FAECBA4BB50C48306410C6436E5A6743C7C064234185E507DCCDC4A3AD1E83755C34FED07F33793DF3427F6CFF23777B4A7EB895C4E6B1AE07E38B870D24A3EEDE166963E9DDE48BEDDBDF8F2FA792CC2A61671935311D7167F2B901AD9AFB89D463D813432F341054BC711FF578EEE1AFFC0C349F790CCC722B0F1710FD8CAD576EAA4F335D5001B8900850FCDCAECAD4D57CCA4F383424A230303B2C6BDE9B3BFD84D570DA1C0272B5FEA19F4F26891DE3ECDD9D1F810967C38A7A2293D2E334EF9DC224F57884A4BCB0E9628B9EBD4DF21127581B99F7BC5C5395B57C62C7BAD6BE38FFDBFCDC12C44C9F37A6AB193EC268E0E8D0C712C8BDA86DF511A21F587A848FE352DF8618F31419CB97F11161654BC7D1FABA283BE6F3D7E468D23EE751CB61A278CF0D1CE8040722752480EAE09EF687FFDEEFAF7E058DB7A107352E65570A2A16D0B3B22BF78B3C027638F0E27DF20AF2723A5A8E34CEDB9E3F01D45E71251CE9AF7C2D1852C443210087A8E2BE19A4768E5B229DB4D6B1A8F8AC039BAA8049DF6090E372DBF15E152F4B4507B864B1C8AD79A7B73D94E62ADF3117B7A06C9BAF618E5B20788180521B8503594D7B4EC121A774120D2E4D159E0E6F7F6B837769F1C243CFCC2F4AAE77EC880B0F9A2D77F91B3AD05A1D21D7C767D1D02D6FA0F0AAAD0FA78A263726AA241C61A49954F9D61293D28CD3DFDA85E10561A0EB0852F90EE834DF2EF740D801B720D893099B12594C566CF450BBA57FF4CFF26B288956C73810C547FB091D63F00002331059CBE05ECE5A34E1E92E6F86FDD1DF22CF975B76515B9E403D506720121A28D3C5FDFBFB24A6CAA6FC95F8A3264DF637C26FE9973EE03488B4440DBBDA2AC363F76E8E8586C6F3B07E0F12FD409D880B878EC8C936ABE5E64AFA413A05A8193F754E9586311A212979E93794D4777350B5FDFC61B9472258FE5B6BD070ED9732B7B6442F0075780302D01760BEBE44F92445D3DDEA17071A99D53FE49756D589FCCCBD7201F1F2C52020EB79264E5FD660CDF824261BDCC87ACE38AA3FED5B8F66E98C45C06D1FA3205D4B2A83C0F04B7786C219B4F5655D3697F49FD9890D977C52CF974EFDDCE99AE182ED8501A128D080B62B704273B2D0C561A5B6493427689C1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E0799BAB9B9BCFB29B73FC76EFA02F4F632690651DA836E0C12E5A8344B7F7198A838D495F72057402527C7BD6F365A0AE60127D3FCCCB6CFF6B1E5A074BFD7E13F3AEA2C7B88B2B5F00F5D582AC04BEBF127E8DB14B59F027502AF59E46E0063B792D357613AC8B3C62F9C231911168483E6D1CED24CE949B858B5BEF4EDE8385591021E52DDE579FD7830746D7141C17016BB61878CCC97BB19A1D394418833FFF459E18F12DD4080116F94D9EC1DDB5CC5785CC5139501A8EC7DF10B2D4B80D8D6DAD2C1255B76589DC236FE19132301CF4295F1064481276E8936CFBCB0BAEB866DC2271C73BAEC4A88ACF665CB08BF94BFC8C6A731290A4CF84FAB4DD2C907ACA5C17738D51864E90BE6A9E2515D47D35CA9314DF70528B6C2E413AF7622E80195339BAFC4164CAF6A6F328BB81728B39019AAD65187D34FA8104FFA9BE842A37C6ACFBAA52946140970E43BD1685217CEE47C590ABEBB28D7085C557159C2D3242A51945A018475FBEEDAFEF607E4A964F2E2D62F1529C2A7B560656D2F62D8F344BCAFA0085D02F5687853126F42E535AE371448310CD1AED9FC0F53BCCF1A8C62581896523AF9C0FC97CB0B9054A3A794B19F850B217B5B63A3C8DE4726EEB36E8CB8CE9C84E5246BF331BAD56E5266B025174BC4B1293155D296C023C931538BA8CFC157CE4398351CD24FA134E5741732FAE1CD38A0D8D3F728564E8E77CFAC013E2486C5AA21FBF8CBD8958BF2EEC78E516ABECDE09D75FD9907B43D902A9B52661BCCA98D407420CDF0E25AC404E737D9BF9EA2AB043B1775AF554AC9D1BD002333DA0A784679ACE50E82E9A46F9D214E58A4B33433844B7D46E7487646A0A35B385D5CD1588A2AD2A9C1EE0E2553C2122554102BEB5B4A21FD9060170D44ABA2E58D51F93608C35F43820056AF2D435D145476D80B97FC4715E7440D6B0CBB6170EF1CBB0E959CCBE669C620F432A6DFC2FB1596F472F943932BDFC845298688CF6043B2FF9C39146A92819EE3576964827B0E07ABADD058DB33CE3617AEA66F8DD709B25338C6505FC272B841AAEF4E3F6F57E66A5B454D95A6722A0CCBC67C6FF55F3531A7612184859C921ADA8F8F9EBCEFE423D5CA559FA1E43E6391785EAF9591C29CAE5547FABD5738BCF14A91EE5BA491AAA23396B11B7667CAB78F568A77E1FE8538D93FA2B7A20C665649BB2746C51730A06005D33AA5A05D544C0B0AA009F520541EA2349EB668DF4213969F62199A98F4901AD9643CDBC42AC07DF4F757218D78FFC7FA0D60CECE6DE87DA02286F69D4ABC33F5D475FF3C90833BC5141CEEF7418A848528FEEDBE20960BD14963A9E687CD5B253F642F6EE4B1F87EA944BBA88F2B822AFCCD2240F91EB322CC3D4889E284979C568791C42E98479840D39F2957C23AD3B0C2EF8B0A6FC1EA7246543CF628EA690EF1E6F9E8C2E284A832D2F407A9F6724AE881C624942AEA19CF39EFF12F7FB4CF6E75018C58E1EE73BB4DD5EFFB6316B52D528ABEFA274462B8D728E597E3D1907B12F1C8AA2A9DCAC3964BCD9E79CFC4D09229D62C032BF7C104229FABA75E3A2FEE7CFB355193F90CE83353FD458B88D3FC7BE6D1194D4043D555E6023BBE26B86BF261A98FE130C900D777A61A9066F5A9E262BD304AAD2A3460A71DEB273006AAE320A3D76966B1024F501DC9344D94A8CF06186D20301E6173F7E81FB360A404D5DC4437F73AD55CB47CB63CE758669B9BA74475392C5427B064D5FCA792D1D0032E500584A21D9A7D24856FCD5B85C56E5487A89997F124D165420BE51131D828484BC5BF2A0FA8860EE96E0D4F5E1885F423E58284A21717002BC69E4512B997FFCA97EA324B89F34A48378FDDD012367AE42078D66D302C90530DDF3BC9653130C96D96663DD7101D9C1335CE4E7295D864A94774C105EAAA07687F860B27CD1E856451F3881C984680692B58E63EF43751EBF35328762AF8B7ECF6F899277DA0A61DEC825384DF2863C0259CFA194E0F27ABC51B887E243FA47A02664051CDDDAE690A4F0E7365D13AFC7C770B4E305BEC928E89ACF2AAF7470209DE1F7C4B27B6BEA8FE58BDE9F2D11685F0EE06A72B0BF530B5C85D5D226F1DD2681CC70C54A8FFC568558D6CE8994A1C9F5F81387D9AC4E8DAB28F56750930B58BC770DF7D97C4430377BE0BF15AC60925CFE29D583971D5D8967D7E3FAFADA4FB293CF8598A9C064D21103652B14A8F2942C3975356AC60F41C2DA126566B82ABAE291E443224A1527033DFFC42117E5BC04DBC19C2DEA0D4FA6CFC303089539696AF48DEDC094A6F13DBF71F04A1B4542C3895DDC93C48083F94D1DF9110F747CB1D4A5A79BB2D726BCDA23C8027451A583B863DFFAD675E4AADF058AEE663802C19C92E66985A3492D7728FBF2037757CFF56BC97AACDD8093A5F573A04D5D86F52A10092ED95820BE7A8202C42E494B9C1BE02C48A0D01DC787B14D8425D577DCA654A5280D695CEF7C8C2C557F524470BEC009816BFBE6174129E6EB02572428A757E640B0461D80240EC8A8ED8C644BA4E09DCAFF3949BBE85DADEDEEA0E316733A45D4EEB729433D64B5AA164AB87B7E1E62603F1BE8C6609B8ADC2EF59A1BBFAB88A0B01EF77CEE4A76567CBD09711D1AC911F7E8E0B61248C819CC2051D63DD456209D120D2DEAE95827D4CD54588FB6C8264094FDD6D6C673F391DA6ED8C21C7A9B0B0644B29CBB4183BEA4F3093BE0257BDF7B234D41358FA620DB9FEC683E739B953B63C9275966B5BB6234D8D2F5B057425A43C19E89349F413E5CD1F1F4324E86C9D8DE62E09E9C846ADF5B06AAB34898F619C5FF547B60915EC3730B7F7218C2C14465FF32956939492CB1D97F57811E956BCAA3E0E9842F34AEDC86677EFF0373FC90AD77B98B048A19A71AC018E376B65C6C37C122DABE6090DC58F2A21E1E3420B86CC4C881499B71EF22021F404403050F823A77F6F3DDC6E0B89357049ABD80FBAC174D24DE9238092EB246D171AAE2E39237A7E2C3C9852F416A3C0EF63BF88F03864B5892B3D6AFB3C63F779D4730D13998A22CBF51D5EB13668071F8FA042916A6878E362BE6853B788FC4F842CDC406FE7989731C79C6F09E1B92FD3DE3918A37FA829FDB10623D1E682665E23CF703A29653A3AD96C865AE30851987EF051EB8ED730C7E3C4240ECE59790C2277B2152E6A9B8E06D52191AB03032D5FA9CF4CA1474EF67C1B3E3480448DFB187C17773DE1C81DDF97121F00A5206B7182FBB1E733EDAF10BE7BC259C1BE21E6201BABEB51678A3A4D91B1A0F7389C1299040C9AD0C7D1FED0AB766347A98CDFD42734AD1B3DC489431B88AA0AADCE99EFF119BE8BE4DE39B8BAB75C9956E498C85133472CBD2D8B332D8729D4C848F3A61740E9AEF47455EFDD9765EE083E120E1EDA7EE1F7FCC3EED8FD8ACE459823A5A5C5291F8A7932D52447FFDAAEFF4910A9B230B310172D0AFFD3A8E842FCF093698D116552DC3E4D3F2BF749D23AC4C4C9D830BB7925C4B0CF5FB89DA609B14C29921E8E6CA72C2D6FD3DDA751C9E0A926AF19075DBDEB8D64C29DD9786F04811D4C4838329F30FB71BDC845D4889D50380CF9DA3E8528F12EFCC3088E854ECBE44D957B3543DDDD88A5ACE0FB1F8526FEFEF4FC4929659ED3296EE29C24A31A0A4F60F947E7F5BA9E0556677341718B130364076010D9DB21D1D827C9550D0008971BAEF5A7BFF31C75D1B2206A0576AA379D86438DEB36DBDE3536814C03A3E5B0BE226FB84B9A8E2D2E2523B095461FD6D8B042E12172E927C09AFD6E0FAB9955EB640331C4ACB0B9F127D3049FEC6003D01D23B9043B1296B26C9C496791563BF2BC2F6F0BFF4777BF92EE59AAAFD310488E71249B6B855FAC871CE78A988EBEBA63C9ECFBFF1C3139D5C412831E79A6BF1F477B07B2EE04692157FF45AC2E0583B6361C516DF2F06A3A108D9B818060AE394599B21462CC5384AE40608065EAEA6C28EF60B5D0D9EAF771C900B0FDC81804A5F7A569E62CC3E7D5F60F3A9646838B93C362EE8D233DCAE7013861CD95DD1CDE923A4931F0021AE424A6744E7EDE1414CFC79331AE30983BE3EBC524DC648B0B278D90624D9B4B34B7F6B1852B11AA04627F2AE4B8661DABBBB53602603D1FA05C4BDE43425BCF019AD7282DD54453A1BFE920B82C0E546621BFD964106962035C67F1C0085168C1D5080345BCEA81A7F53A015328EBCD73862E1C5923DED1904A148D4F1B073E27A1DB27ADD23EC67466B43EC0596C9BDDAF5EF9A6A318C4738F4E4DE1E60C3FAFAAA34C703A50555DC1272E23402B1FE8AE08E3CC0D30176470FCFDF9F9E5A180F7E48C8AE60DE7421B9D73FAC51A11F3BE56CD05A62A18A1A1553FF589B1B6E838779952F5975C968BBA4E386C2E560472F96DD28654089BCB12B7321720F90D17B9D28E58AE055D10C7B5A6B6059339259225B02283C1290DA81FF52B6AD01DC0FA92DF3DEA27B83E5447CEF22B6DF5E242A167283FB1B54B7160A38F197C09C4A9AFC1E38D4274FD23EBFEA47A5C259A428B51C9C527A1CE9A490E442349F4BE2D68DA4BA8D85BDFC10AF5AC3134558A90156DF97647B801DD0F4F4D938B40DDB8FEF5FB3A03E271766695746B235BCB568DF2ED17E379FC7737481095B764F059212739D10E0DE36A8699BEFFE79FFEC88DF6FD10CA51AA13517FF5E4C78C6E4DBF882EFB4F8F9BE1AA7979BB9D4170E7A10D2EDD3953C21107848E8A11C9B3ECCC60C960F38DAAAB86EB26E0D0907EEDDE3C2281D35F821EB37AEA803CB6387C9A1548477D67D814B0751FB06661B3A047DDADEA42DDDB3F19BF75515DA8769958EAF3558E21912B758775A92832E55EA3188DD0C1604B892ED8C76A3E4D332927B4198BF24FBDCC108F08B8E304582AA5E2150D55DF263338A78EE236C079FBD3569E354268DAD487A33AE01060F7A38E67FD73FB174E94763C38C56E4276E611E3CBC04CB2956E8FF5D50C82C64C28FBEED5FF2DB90A41BC8C31E1ECA443BACE4B33018BE7D3BF355A52828744A55411A61130F65C1881B28E8489CC4904A468A24FB98D4B9D80E79A99952F6D3086969EBDB28E7AF56D1B80631D9A01D8B0C66BFFB68D3A510366DA804739EA7A4650A67E75CEC132798F9A8BCD9E452E28A67679E6A92D2E2A85503EA854CE3DA1B7A3157803545F9457EBF7602C18280CDC3227AAB8E551140F0DA1BD13D2BFEDD9E488809B7E0DC847A1F217E19B678D2D638288CF10A6B1023D7348ADF29D35142EAF689F659D6FB9354A5392C9D5FED55ACE7FFEF05CFD42D4A2A60A8195279DCFAACC03B55030CB4238C52E6F94817F21950E3FCB4AEE1C6B70428E2A139E6CCEBBAA5DAFFF2D8AE86E93770DD1FBDAA16908BA7A59B84807C1D8ACAB311E78642EED43FC8D143FD00E100B881DFA5E7EEFEEF9D2BE4A19ADF82A93C6FB68B98E4751A1A210BFDE263DA1435A03617FC4D2F62A23ACC3A0246360CA7E661FE9BF490B2D08E46369DA7A0C0E0B73A4D69F1170DD224CB8F5A341529B34F243DD2FB287835FEAA850BCB61A3DE84063DFA6A1C2231A09D26D5EF9068FC85EA85A9129338B9CC873425D612AC28B8189611FE4ED9B86BA2AC00D0CCC0FB7BEC9FF10BDC99A48F6023308074C050798F93E8C121EE0D6E3DE118A741FAC4DED36847F2E2C6CFE04A788F368CE5BD28B92DBB99B83E941D047CB86C4EBCD568E92602C287F3714E1EBA67FAE7948F9CD68E27985AE9BF982713E054F379EF16133958E95E367F71C75A24512581A888EDFFC20DA7801D4FF1D35DEACED350743D11AED3C00A5DE3783BE8DAB3A05B6CDFE7B2AF6743297BE970B2C6CFEED2BF7FFD22D31F59F5E153413650CA4174FAB35747E37A002DF804F4BB548990C8FF895155B7A237572FF41E31BCCA80A0C91DFD3F23BE1CAEC426132D855E29416FFCA0D04F2C20AF6545E0D7315A36A87BB70BE9304396ADF622E7106A9675760B138CFBAEEE576A6F727F75F23BC19BD414DA85DF9E895BDE2E155125F54A1915AE981B4F3FCCF4576EE5C70439DBA2020E7D588F3953F82B0054FBBB9C6F72C34AB5CED3756DAC35EAFA4773371B961FAC3A3FBFA5243D45081086084415407BE607187B8F6CB1426117FF4809DFD081185712E8091A197B2A2E64068DF1FDAEE4B57F2F12827F75CE848559943C9CB2CEFD181D5789EDFAE2BD9ED269E9EDD9D35C51AB99EE8564FDED8FA980E74A661C484EEE4B93D521B73C62C176A3289F182220B4A2DF9C116B9DD45559B474647B0203001E8942A2C4DDAE2F4FCB3DC6F5867293A6C19EA0E1E4A56A6A8606B69882753107FE0050BE31B842FBF9BC021B1BD581A79F1D9A436073E6918102C22032BCB90D6F4F43E53837E34114B522275E40DC7D5249821589D5EB3DF5B5C1DBE600E4722081961A7746653314BB34F30DC4D9FEEDCCE776AA5B58985ED95F5349B4E6349A99F45F4C1134DC6759E4A3C21AC6BEB7554C599D83A607A5BF83A37F727E698EECC57D39C39F8EF4E57796A69FED7B6C318F7B21F3C2D0D2ED22E3740106E04B4623EDD9332FD12A146027AC73DE74C336CC35E5FA9E5697501FE41447C2944D35418E9E95A1088B1E992A211B32CAF3BC029600E0CA5542A08A0F20C70035A745F9998EB614F040B07B9EA74FD3B43A178C86F9A97423815F2576EDAEB54A44CB7F50E79B62C4F6DE1AC4D41627A0A12B2789525D02F13EE5A6626AEBA834DB1FC0D26688E1EB57AC8CCFED6B05782C722FB69C8FDF775BB021825A0FC882ABEA7A6BDC39DD98CB6102E12B3A0DFAE6BB742CA4555779D435EFD97D782B1353369E563A14A46F06BD6F18F7C6E36AAFC0738061F5D5371CE6098748911CDA3069B1FC3865DE2B8C39FDF7A9F9E62784DBBB7333C78A6F4362D8821BE34530F5DD4223E354DCF2E26C736339865643142145323D01989A45B554359EF13645256DBE304E9CC91791DD37B15A35CAF6A76C0F4ADA46EBE2A9C362BC795723F15A0554D40ADA1F45BC828DA3DF9ED00790AD13559E235B18A27ACC10861F14D897EA9535DE1552E00861C480396966ACB05BD1B63290D2BDDCCDC65C29C48275E3B9D94CE6DDC04956B63C9A195DC0CF47A7B2B02C906B461E4DC83D7D27AB6AA0FD56AFCEF102C319ED0961A62E5CEFCABA3B3A1B59FB36C7A9F88CB0223C2B60784AFEE5E26952B7B6429576EB7AAD827F37A3864BDA209B08F3213F4F40727827571181185039B36FFC2EDE3E969EC9A32AF87B7828218F3CB17DA947DDD8792A1B46456AE891D506165520CA8528182069788AD5997A45D320A0557611D29CF2747571A0D0CF4EAF38CC8056F56592A148EAE7BC0AA9628315455CBF6DA2784EE042042EC766D14B71A54A730B89245B3CED68D152498F4E159446F6569CF365C586DD5D8413D488CB706A586D16C5371CE5C2F0E6E8873868FB942627082CA3A4A3D8DFDA0CAA3B5C0089832C88756EA0256AD10DE8AD4AB20CB6A465B2D0C654D82EED3F3ED6772E09D55E4B217F2B801E3570CB5F09537B0F22F6546C4FF733C421BE187F51B4A80D988EC61D034214478ACEFFFBA3277776532EC0159C46BC28F4559B9ED8937C341EFC9308773258238F9690A42382C19F867669E807BB2E465AF0F0626FC51F77234A2C4176B3EBFCAA90490E95F92D5EFF3CBD076DBD85CA48D252677E8E5166DB58321FD28711ECA57C813476BD9217D4A3AC344C9CD6278DCEC6018F0F476C9081A598A51BFFED48BC424270E934420CB099CE44A662E305E8235B414CA69F6DDBBDB08599903D937CC1B7E7FF47437244823AF5104CB69F45A991E1F29E4B746E6A8E37E0F6CCA8684B85EC118351A6555DFAE301ACC7FE1020E3151EB5560178D5DD74807433A62CC9EC6BE9A1F44596FE2565AB6C47F04043AC39C9A166216E009C95F2748C0D8A109C92865364AD57F3F86C92396387DF46181B028E3BD01CEF8D4D6B2EE74BF7A5EF78EABB2AD9747E7D889E826AAFE62A7C79E7DF4690C2EE8A22E04B5373266E3E0B5C67BA1EA46F00D5680A1158CE66DA0312C0A93045386FDBB963B5A67B5DD2B107DB765F1D21B299F19EA0102928B56196E494E4F259A6F94E3EA341D3040082EFB743DF976ADC2D2BC78958F9FCFE170CEABF781B31E59480B1B48D5260162DF453B2BCFC26790EDA1373B6B7F2223970C91CD4AF0DBEE56498AE5F39086A1BFBDD16951F1980FCF5989623034C7EC953864202B3F3399D3EDF9974B092F154FA1724AF64D72C010F4E1614D087238185D98F3799807D0057309D941B1F9E70E5829C90C9A6671E73B79801FFFC8601E2077B8C7CD09779651444B13F7EB5387BE381E17A3F872C0AFA8809626EBD0F339192C1F3A6D43AC007FA8FF89E020960E393F9013D5C5D3E643F316A28E4AB4ECA97714283A35EED8A9AB95C0BDBA4070D6080CB2E1663EB7F0C9F64AF1429EA9F56041880300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/BFSWLX+CMUSerif-Roman cguidfix
/F1.1/BFSWLX+CMUSerif-Roman renmfont
%RBIBeginFontSubset: LRQQSJ+CMUSerif-BoldItalic
%!FontType1-1.0: LRQQSJ+CMUSerif-BoldItalic 0.6.3%%CreationDate: 5/1/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (0.6.3) readonly def/FullName (CMU Serif Bold Extended Italic) readonly def/FamilyName (CMU Serif) readonly def/Weight (SnapShot) readonly def/ItalicAngle -14 def/isFixedPitch false def/UnderlinePosition -100 def/UnderlineThickness 50 defend readonly def/FontName /LRQQSJ+CMUSerif-BoldItalic def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /e putdup 34 /sigma putdup 35 /i putreadonly def/FontBBox {-1197 -395 1684 1133} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1C23F12D96A389B4EA42FDF49FB4D6EC0C7E15D454B57C1A8CC21DF884A57513CEFAECBBBC36DEB721F199C259D134FAC6CF04C03E1A798E1EA94F29137ECAED378300E48A5DF48031A09DB7E703E45463C93A1FDE28E46B792687883DEBC84BB907526132D84DE65E8D2136D49009E1F1918302E2CDE298F65475F146C0D0102A4055AEE4C5934D4DD4B19AC5257C92364F8D2A765A286E3012F9BB874749BFECF61097D4A8F748F26C93143A23BE4D489B84F56E75EA8C2F72A3DCEA28B91E9CF207266BCF5095E06DA4B6CDFD172AB44539C21E3E68872D458E42B338CA0B795C376D4F27127595D1A01C6869ED1EFD1104BFE0D43FBC1161D79EF05F83DC9B1639866D62D5D0B70FAB8924BE21E2CBF6BEC55C356BDF815421E0C3EE8DD7B5A1EF6A6554F1559DF3B357A52138DF6B5E49A5DEE3C366C693E052FA5E3B298F502BD9BE94EBCD02386AAFC443F78BDB8A53978EC91196FAE0EEEA6C381D19D8BA1D45EBBE7E3653CEB3121D14672F39BFD2D16155C05A20A03E30CA1C3F5083DC98F6382AC4AF23FFA881AD350D04EC23D927CC60F68875912E86C2BA3D3D21BDC40146F3B4B4BF72894599FE48D65994EA0372F43B94A668AF0DEDE9E18DD1567B34A3004E2104FF40E940C630F1774D78CC2E6BB8289CA2BACDE9AA0B813744B98F925D0C158BE40F0804E90875400AB9247EEE80B789A009DE3B6865F48E849C187C89C1F19891B79919106F6AA5B0F83B6A2C9D0DBCA95D948EC768AB69C2C387454BE27FB29588E06AC38FD736459012587157DFFF92F26EBA844043A3CE91CF206865A695918D1F659D14BEB3065593EFC24686E2B19822AED0A341E305095F769EC460CC04C273E985AAFCA6FBD97A6C5AA118E006174D941D45324C603D7D8B35D440E27C2CB95CB1B5D88E6904A9B43E0DADA7595A7F64D8F494E710EE0A1824C1F6AF7271B4BF9B28C0A4D42B44B4D3238E0D1EC3154C7FCF9A129EDE119C67B09D06F95CAA54711F4DF4210A2B48080E455B80DCBD636131C5833EBC845E015A20524BD3AA0155629FB51B1A9F227FC9D056C86CF7DCAE5D6356C5CA5D4E5E5A20AD44534F938CDCCE9F7D0DF7B24A7871782F43FA238110D9D5588FA40C1E559A5AFAF13E78D54C8E4BF96828DC57A1068A08C268369CC5732830586B1C7B1AE48353CB5FCDAD12A023EABF29DC2A11392E6C076954693BAEFF0F93224664CFFF70291153B19805BFA80475E11DEC60169DC57AEA91A4C2140FE37A1649CC95D923E60E69BB54A5AF626BCA12AD7BDD4C19F9D7305DD7652D0031E09A3776F862ACCE6599D2EF5A61ED144FCA4AC3BFCB2A666F39766BCF6E71AB4ABE89DBC2C981E6739DB30C4BE01D43258557228D38D7B7C2017A5975C0FBD67829F61BD9B8E53F991048987A287E5E5FD6E2E5368468DE26D5551669CFA98D49185DF031DB5FD8CB9479E66FB8B6DE8B9C6993B572C71B87AF423213453E7F0AB65365D2467EE352B54F5A572D7A847F1A52D3D724E945A2C9E4ED26E55A775FD5BAB1C148FC4FDD6DBBE5979FFC832527A845ECC466BE3ADC38DFCF7205A71EADA27E6F6ED80DD5DBC580B8CC2117AD0205BC24EFEAC6094DF5ED47B93ECC302498558BA5785EFAE72B20CEF5884A67E1F873ED339DAFC85D0C358DEDE6A978B967B6DC6B4CAC22C596919E3D07B025800B5AB2082F4478908A62FA70CACF1F1A4E49C73F384C638436542081F0CCE8AB295E1F46413F804F93A47D6297DF09FFB5EB3DB51410A28F63E70250EB7C90B656D592FCDECF38E04CF36A4B1B64370C994F7D0FBCF8F7C197026A8156FAA3A0081A681B4CA4CA262F0A7E9C544323AEC075972186CBFF373B8998B7F151722A036E11A45BAEDC72DAF29EA6025A8F531A0B8BBF962C9D7AE3D7E361B8F8874E484794763C71DB5D70FB5448CEA1FCAB280C72AE20DF59FD5F1D7DBF110C0DDD0A6F86E7393405F6329A2AEF705B1160C96BEC18484BF0D8AAF5A114DE58B795E3403018AAF0E39C2FCA0ED58F7632A07DD6D358B4BE08F75653BF995A5750964B3C371BAB1D0F27FBDD730A38E9DCBC9F343E846E26C3E3DC4658C55893E1825B5C3701B6A6600ACE70D3C8D20702411D51A08E907056573E7F7319E7A7E44AD379F666089C95831A8F3366E9B5C7ABA9A2D0021CCD1C02EC87F6B5EBAD5F4FFC99C5711BB632AD7A1F94708245E6C8E79F8DADFCB85CBAAD51C8EB06FFA74876A94CDEB32B49F8B6A5C3BD69D0DFDB6A60D9DE3BABEF0DCB26BEECA098A2EACAFFF061AB4668168E77EE52F8F3347AF1574410E2A5ACEF72C4B24635957BA3D5F3D6D9471DB2A4FB08DC8B277C4A5D3E8C65537EE8F4C272E8650F6BD07DA7C8613B591A6179A7940BC69F8BD020A4477850DDA3F3F06336890A77BEC0F2CC7D0A02FE598FADCC04F157A1A82F67B949D4738761AE0D8DECEC5148CA69654C12B753568F5C003128C63DA1F0A0B8CE285C42C527D66D8901FDB3610D7D54657630D9D40B8C958D0C1BA2F4D53C27BEB04EE5CB39F76CB59BC8D2AB3E54696994041961CD0363498FF50C6FEED427035ABA7A5C63C021F4E0616B63D1D4D42E3FC3A69BB46DA39636CC819DB20819C377C4D9A2D8D86681609BB56E13CB51BD4663DE8C23D55A76CE666600EB39FE550DCDF4DA2C56B23CD8B295314A42694DFC16B5770D74C8F6F454E7BC3DCC328731D1D3A1772EF0889869E7BDC28BBC7CEBBD3A9ADA49E2BEC87DC338319421AA4EA4E14A1EADE7994417CC2ADCD65A4602D64A0E434093D7CC9F6EB76553C1A80FC9D99746C0B794D4B97AEF58A2C1330C402C7674861ADEFA2C3CEBA5E33E4E5BF1AEFC40F2CB6391C8712AE96F4073898D05E4855D72C11A2158FF3AEC3A802803D191F21E30B24B80DA1967A2FE4E89EFF1C60AA4611A0DBF9D72C25A8A4F5A0E5A6756D3D001295A1F1E14C33D83D7285FA33368C366832475D5FBC955ED1949767EBDA17B21D79B2082707BC5031D0826A84556571ED8D1B7C8081F2D7E14F4FDB11DE04BC9462FDA6D70ED6E7FFEFE9E6C940594FBC6902730DDF6BFAE297270F3633D3E8D7739296E4F8A929E4E235C053D340AF753529DDC539217E405B0C19AB878E8AB3C726D26BA938D9A6E9A1324AE77CD614C7B5738F52645DCA25A25CB937C9C9E5B4B8FF8CACA8DDE16E7AC422BC58E9F98002795BF217AF64999FD7441838A025597161223E4BDD4DA6F0BA5A1DEFE4CD2A94F1287F3EAAA23667C9196EC706EACA166C0A9A1BA009E73EE27C4ABFF0E32EB88461468BC14E308E3010589768EDB355E3C062B656F8202CC087A2DA3DAC6C9F9F84E8121BAD10DA9E0D7158C8CE55D061DDA18B0C12B52A1AE72075BD23469ABB0B381F4177A87CB1811D9886AF3209794A5FEA3C09E107857399F484C4C7215C7EA0979B11110F7381456FBAB1ECC614C4C24CBDA4B3ED1996DF23CABDC2B0B5FDADC7A78D8A84EF062665E184AA579AD56F31DBD898DDAEA1064359E657BCDD823952B0C1F9F2009589128BC9909C2B079931AE69288CDB7FB7BCCF7C4A623EC2D152E34E296D75A2189BEA959BC229921FBB36115F38643E98B103FB5011AA8F1F923CC748335738051C5D51E643D5A19ED1481B187007355682D50ECD8D09178A26377A09B04A7332E63472BA203FECF0AEC0E1BE8CA8E6B2DCD43832D78D1D560699538A811DCE8D8BE2C91EBAAF90EF2288760CA73257712A0FDFCBBDB8D80A56072654F67232E15343A6FF9FE92A652783450C4F980B37D78038BDB44E43DCF9BC01DC382AF7FB73FFA30DB8903B3962D2B0C54B01947998677DDED9A6373E78E086686DDCC5DD01A7D91B3C5849D81AF27A796D7BB2E0D42957A078E5BDC9BDE7E79032D0B7DF263102FDBA3EB2007A3708F6DFAAC1405E255BC5ACECA146D87C26B6CB4286A27C580878B411B159EBDEE55551AA4CF0AD768BF0782D54E9C97A31E5A1E950428278D8A1051C0A6F05CEEB30D5B98A906F2845648F5872151541DC3E812DB551D3CED7CE4D9D3D8CFDB19767B4AB4A2F8B0E5075A4619D7FC14B5AE200E1F39A6C3EAC59A8444E5CAB460D7213B90FF596D3E7528BE3A718EE6C9BFDED63CB13A06D63CBE06EE31AD9F57D8C511ECF669A819FD322DEA13D26BFDDCD346DDE89313FC8A656D81A5216E60FCEF415BB9875625903D794862FA156A0C8A84EA560F67E74ABE1B56F0F0768082C0DDD6A81458BFE1BA1D2AF477B408BA3B9B1FE99053AE90E6D39883BDA54401D29270DAF339B603CAEA76C0380DA0216D0916A868D5C4C22BDE4AB7B56F9B2DFCF5AC20686FF274426619EC2473FB4AA8E2A22B85C3819C20A35F43240F921AFF53D9D9434A706F085DE6740B365B942CA40EEA687437ADD13DFE790DA2FE913E1AFE61D81514BC993297D9510B54617318BCE144C09526223EF816126F9567AC9653AFBE02138D38E11DEE61DF45B24AE705E2557D518A805C6E9C82C678C086F01CF86A7C2F720E3B9ADE39FF62A48C9D42D1AAF782D6097044ED8F07569F3213872C9248256D2EEDF8334F7037E7FB5136DEAEF0B9AF0F219B2C91377195A74FA4BC697A1320BC15CEE3BF2BB95D967193F51019665F991DA9C28DC5D1921A2896E9532AE18AA88B715581BA6AC7A1ADECC2B3468E6D676076D80431B0C12FFA18B2BD0FBF7CF70D2E92BD175CCCEE17D616B819226C1FFE9DAF89541B0B26A6118F1AAA921D193CAE9A1055ECDDCBC4F446774AFB13F6A3E8C934A9A00A4DD811D0A16280CC78478B7C8734D1DE0B0A086D58CC96B409A64AA0EA998087B5059554179F130601C9C0A79877D329B924A8E36D6248F356AA81F9064F72035D3943AC36E8232105FD386D571DFD187800F880480188B895C55E858E31AA3B83620905824C8E6644C06E89BD0AC0C894ECBDACD3AD533D1E47C43348163E6B655DEBC71DC5774192AA21F1FFD055E70385C7F23E45962E2048CD7156326BAD59C436219E7D785AC4E9D547AE3F5E4AEF0588F7D16E14F67FB45660C5C3D487F9025FAF26A857CBCE346522928F4AAD58007812D66C2F98D35753028455CFF81071C0719A50A79F90CE4AD8CAE6F8F29BC6C64392F70C7C16A50FA767DCDDE4760CF293689C39EC9DC931DBD8FEDFE50A2800E7BBD4050B171692BF3DB58FD7E77DD5831521134587D2253E7C8ED7658EDCA34946D4EDEF3E62729552AE06AD596C9C702C5A775A50ADC76081D7DD973570BF9AFB997F8BDB456B8DA27A6A64EBE63AE6DB45EECFB0DD5D1A204044BC342894996DAE970D6A1F5699834478B533B03334B8E6B748BCCE97BBF656B78257905D23A3282CEA73BCBA142CA6A5E4A1168966AB36CD620BF0D077068E421F5D452D5C2FD6CCB1CFC086D12F411A7042C06C12D666F50CDEECEAF4D051470ABBFF5DD2D3D1202080BDA58D1810A23748EBF0F9B32027DA48A6DE88332B92067283AF2590E8C33443E2774DF6B641746E8181844A3C5A9C1475F56E5FD830CCC07A162A6B17B98134810C0BEACC68159737495E6D0916A868D5C4C22BDE4AB7B56F87DC853AFF5D9D6BD92D644E169F2D90718ED02ED37A416EE5F792BADC5F1FED96C39353C93DEA4686FF942F24183EDC3F4A86F5A7711FA3B26D1F1C5DEC81FDC744E5DBFA419AECD7827C69EA0D126C710418C28BE6C1DF6CE9239A32D4404133A9A6AEECC5722304A7B2C9C54D501E6369E47CA2BA1C774F9775EF06B648C914F326597D2E1F2F09CC9897DAD6F1019C280645984401C1E206C4559DA6A247A27FC3601DDD3DCAFE52FF8440C375B86F3069A4F9ADED30ED29336D908C20741D1F9184779C53F6635F71CAC629E3FCD2CF666A1AA922D9B281ECBC8F98C2F7C90571F99D91720CD9C0FDC8275DFEBBDDE71A1FB5DB363A92D9B047C84C598C136C2D83593B6BD1E71E8960F2932C8D6EF5227AF064C1E0A5C0ACC87B401E8C28F1B6343F3DA841E23BB6902E7794CCEF8E57D62BD7A71496B358B27315556244F5470C307FF7DD425AE06D7A22BED0CD5D64896B259921B321013C6C07932D5D065C60D43F974CB2889062CBE48028FB7A1DCA85124DD9ACE0BFEC9BF7A1320D076D9C8D8B6E7D935E6713DA841108002A8FABDCD9E9C1F49013C594F7FE13E5E195C6E7EC9F050D7907DC67AF54A526832D26ECE392D03116F3EDB95FD7A4BEF81ABCCCB5380CB51B4F0B8E7236DA35DCEBEBEC291715A71ED30B1C22D22BC29770BBDFDCDB80DFA1D951C0A87FF9E867735017616AEF2DD0F1A19804CA558FBC70410B2FDF48B9E223A414D3FC0D3C6C72742641C1E62FC0121F1A55235E17B7EE02FE0DB5584650F6A7BEA2D3CED59DC6F12505CE9C31FC08131846BFCD3800D82E586356B26E8C59DCA0274A91911E23E9D18CFD3D5D8CC81D4BC41E590705284495F94952F622AD6CC8FEA189EA4A3698B805BF9D78D07AFC212794B1945F9BB00A7DF5DEAE15E04BB7640063E102F1D1BF39AE3DF7C07AC83C011197D9BAB0683A9554C207BE7AFDF72547F77126B5F1D38DC5BBA721BFE02C32D51B7DADAE4442B53A757B42212E917439F80F5C4A244097D5AA86A850D6EB28307FE716807419F3109915447F3E2259D64E0EF1762664B610B0C5B72CB3DFE65914DF9C8E8DC39EB70ED24F138F5ED28C62C5E008DEC3F417F50B8508E4985670C9FEF4753A231F23E2378A44DA3BF71265DAED3BB17318049D71598975FB9488D26E0E663FF92E52E29BF869F75DA0FAE1F484DCF7CB67DF9AD6EDBDD38B2D33C4E02173AB309C148531722DD2F8E15717D1AC7E4C60823FE8577DF980D38573A4331778C0386B89C8B8F9AFA4B080BE312941C447A92557738693544FC65147C9F1FF3A7D1ACAD376DB3CADB69459F7A5D4F186486C0F8FCE05A1323550231AA9ED1DE0BAEF48F99B8886743BA0790157E2D0E556E82346407FDCB8D1AD229F1FA2383197F077C2FCA8A029E13F2926699E23B77ADB19E124F3D6D6EDC8D82A963165DB953AC1FBD4E1953A6D6818CF2BA01637FB768AF67064D81DDE8DC303BDE1E221F7284D4418192EA79AD36C5BC565C47DC70D76660D838FB89DDD35BDBEDB9A76BDC77B78C59A7BB936698E1063750F9FA122B2FB7627987D7F340398A46A5D06C2AA5E808D2D7BB15E50E9AC4DD0C0CEE9CE2C2FE901D1FF30A04534E6518FA24C3DF1101C145ECCFD37D84E71B43FB155FC05E4BAD9472DBF57073BD473DC16511D8F293FE8029D958BBF0E37FC58340BC754C3A3D57A82D249AA1635968F47144E7861A2BCE8AB4CA7F04D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A819068C599C187B20A2CC5FFF776C33319D407D7037B27A141106AB1596AF8D40E4CFBFBC09A8BD7B39280E289C43DD2CE6065D92499730D065638EF81718EA86EFC8E43B5B7614CFF0629D14D3317AD88226B91E3B6076D2A3154D7D9A03B2DFF9CD97354C3021BB3F4ABF87719A20B88200BD50BF38F9CFF79A9B05E17A1BE370D3040B5B604E7955A23B4A2E7DA6E15121962B7B67043A4D1C6FD51A49E4645B088247ABCE5ED934F9DBB3D551254231173130A301CBE85B3AF99CCFC0199687593DF036B119A11714D3D7BE5FA0703FE8949B210EAE4D9EF17FDDA47885B3FF5CC98A93A2AB406F01BA96160E28257B22641517ACD8139D49FF5AF9E832D254B6805630710D4FA0DF24406532DB9FF39C2C15AC00EE166ADDD1B6DF46C93557DE35C5EB5EA87F1578F4BD775C34D73FD699228DBDA6D9C6A7896692BB54ED6245EEEA3591A798D5941C16827F812D56F8A8302C41FCCBF97CAE72BF96A4BC020F5E681AEBC2DE2D38C2ABF984D4C7BDBA809C7FA9FA7DADB069CF3226EEE378EC3CA5CA9974FC38096B7A078A6065EE55CD5C47100AFC01F2F45CD4F6DD29CFE584CD773A1382AD92D356C42F512FBFA74924FC20C106C2012606449ACD326A7EBEBC1DEEF8E61B2BF2FBA9FE3378DE6B378DC015F3AC6518D9FB2758702AF00C6AE39464539D54070C80AF82DC8CCC76C007B9041994341A37BA7F3FDF4083B75C000F0A5EA1B5C2A610EBA7CC3CEBC415BE928D1366C080C253C969AF7AC83D06101E52CF77DEA5A4B9571735DF6E47F42BCCC7D61B7362E33D00802E21EE02652666016D8E0E4AA6C193AEA978F5540B751B45B5F71F221EC35762B361980E6659F6D20F748FFFC261BF0BD71FE88A62C269CE5989E76B812181075368ABD423BD723A04F0F825A4306569B72756794AC862F06D7E55A4F9AA2FA4730D417879E67987C1A160AB7857BF413BC61785F606CD96E593035BF180A7D78677A05BF6B1E23B55F85F02E6615D84BE4778F1D27882D513A32C37A0244946136A8A35A9375355DB40ECF194B6483D521D753BEB56CD436B3B4E730686F102E8F3BA6B5F2B2ABD5D39DCCC0AD443A956A05EA9D53B3048CB907DF26242321C3E5C1A981C4D59E7DE1231F69F745BE7BB9AF746B1B7B67C4096FBDADA81777501B117A77AE6D485D399717A3AE1473A9B3E4C5DBF93BE729096FEF83354665CD0A16E959D994123A452B89E9CBC7BE57C0E82C554C2E69709B3686C53E085F78513B72928004B3B944C68C5516539C0D565148DFD990D3B46D3ABC6790E8AF5B0B6FFF9B3E700614DB3DC42AEDF71D09B6FA02FCCAC17E56994EEAD4C78340163416922544BC22B6E7D62578992B9B6AF4F7119F7C052B8DB943C18CA0296076254A9989246F57B0F5E758CF4A80DA99796EC42D6E9716CF969C27982340961DB40E91085C832DD6168BE640198E11E5B812DB058A640BADD4FE88B336B1803B1A2A236A3BB8F50D27526D7F5872823319D1FE7A6537B08DE3DF242827D521B9B38FE36C15012E82B9A31E30F173F847E2D062680E677234C1DE94AD52550FBFB383BFE7CB75BCA207A151E18BA4AB5EA7DA01ADF1BD8B82D214E4B54CD984E03FF97F4B348808656151BACD949CD64D646AC8880C9E803E4090656188F558709674B8672C0414E102382DD2A2F8D94CCACDE967A9D420F77B4A8E75566FB9D65C050AC408C5F6DDBDD8697FDC6105DDEB1325B8729252A66F01225D5E5AA554AE32FF2BC864972F653755723073CA49E32317A863A57A258DE8942F00066D506EE3A5BF978A712402C15D27E35BF16EA9560EABDCB5970119B30B5B68CF6094565259009B906BF1D6E736B0F75E28E57B7B5B5D671131C477618E79C449E88AFC2E3F54816A37C19FC7CD017DAF342699A11AB254F9BB320E8ACB51474914F8688B8D770AA4557E82DB9E9BC03955916E7619AED9E53792C54836AF9EB3A8A3E9F97A5D9CFAEFDCD315521B705B8C4F0E07387BCE10D46910EF89C89C884E0EFD4D123E187E31204F4C110D573E45D3BA093CE00559D2C34D01E6E09582613F927D918EFB0356F7A7DE11657CAACC6200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/LRQQSJ+CMUSerif-BoldItalic cguidfix
/F2.1/LRQQSJ+CMUSerif-BoldItalic renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.84396261 0.84396261 0.84396261 sc
q
229.215 81.898438 m
290.785 81.898438 l
297.41241 81.898438 302.785 76.525856 302.785 69.898438 c
302.785 12.405638 l
302.785 5.7782207 297.41241 0.40563765 290.785 0.40563765 c
229.215 0.40563765 l
222.58759 0.40563765 217.215 5.7782207 217.215 12.405638 c
217.215 69.898438 l
217.215 76.525856 222.58759 81.898438 229.215 81.898438 c
h
W*
0 0 750 593 rc
212.215 86.898438 m
307.785 86.898438 l
307.785 -4.5943623 l
212.215 -4.5943623 l
h
f
Q
q
228.24037 508.38568 m
289.81036 508.38568 l
296.43777 508.38568 301.81036 503.01309 301.81036 496.38568 c
301.81036 438.89288 l
301.81036 432.26547 296.43777 426.89288 289.81036 426.89288 c
228.24037 426.89288 l
221.61295 426.89288 216.24037 432.26547 216.24037 438.89288 c
216.24037 496.38568 l
216.24037 503.01309 221.61295 508.38568 228.24037 508.38568 c
h
W*
0 0 750 593 rc
211.24037 513.38568 m
306.81036 513.38568 l
306.81036 421.89288 l
211.24037 421.89288 l
h
f
Q
q
398.35168 508.38568 m
459.92169 508.38568 l
466.5491 508.38568 471.92169 503.01309 471.92169 496.38568 c
471.92169 438.89288 l
471.92169 432.26547 466.5491 426.89288 459.92169 426.89288 c
398.35168 426.89288 l
391.72427 426.89288 386.35168 432.26547 386.35168 438.89288 c
386.35168 496.38568 l
386.35168 503.01309 391.72427 508.38568 398.35168 508.38568 c
h
W*
0 0 750 593 rc
381.35168 513.38568 m
476.92169 513.38568 l
476.92169 421.89288 l
381.35168 421.89288 l
h
f
Q
q
58.129036 508.38568 m
119.69904 508.38568 l
126.32645 508.38568 131.69904 503.01309 131.69904 496.38568 c
131.69904 438.89288 l
131.69904 432.26547 126.32645 426.89288 119.69904 426.89288 c
58.129036 426.89288 l
51.501621 426.89288 46.129036 432.26547 46.129036 438.89288 c
46.129036 496.38568 l
46.129036 503.01309 51.501621 508.38568 58.129036 508.38568 c
h
W*
0 0 750 593 rc
41.129036 513.38568 m
136.69904 513.38568 l
136.69904 421.89288 l
41.129036 421.89288 l
h
f
Q
q
675.81659 81.898438 m
737.38654 81.898438 l
744.01398 81.898438 749.38654 76.525856 749.38654 69.898438 c
749.38654 12.405638 l
749.38654 5.7782207 744.01398 0.40563765 737.38654 0.40563765 c
675.81659 0.40563765 l
669.18915 0.40563765 663.81659 5.7782207 663.81659 12.405638 c
663.81659 69.898438 l
663.81659 76.525856 669.18915 81.898438 675.81659 81.898438 c
h
W*
0 0 750 593 rc
658.81659 86.898438 m
754.38654 86.898438 l
754.38654 -4.5943623 l
658.81659 -4.5943623 l
h
f
Q
q
675.81659 311.15204 m
737.38654 311.15204 l
744.01398 311.15204 749.38654 305.77945 749.38654 299.15204 c
749.38654 241.65924 l
749.38654 235.03181 744.01398 229.65924 737.38654 229.65924 c
675.81659 229.65924 l
669.18915 229.65924 663.81659 235.03181 663.81659 241.65924 c
663.81659 299.15204 l
663.81659 305.77945 669.18915 311.15204 675.81659 311.15204 c
h
W*
0 0 750 593 rc
658.81659 316.15204 m
754.38654 316.15204 l
754.38654 224.65924 l
658.81659 224.65924 l
h
f
Q
q
675.81659 194.77951 m
737.38654 194.77951 l
744.01398 194.77951 749.38654 189.40694 749.38654 182.77951 c
749.38654 125.28671 l
749.38654 118.65929 744.01398 113.28671 737.38654 113.28671 c
675.81659 113.28671 l
669.18915 113.28671 663.81659 118.65929 663.81659 125.28671 c
663.81659 182.77951 l
663.81659 189.40694 669.18915 194.77951 675.81659 194.77951 c
h
W*
0 0 750 593 rc
658.81659 199.77951 m
754.38654 199.77951 l
754.38654 108.28671 l
658.81659 108.28671 l
h
f
Q
q
675.81659 424.03311 m
737.38654 424.03311 l
744.01398 424.03311 749.38654 418.66052 749.38654 412.03311 c
749.38654 354.54031 l
749.38654 347.9129 744.01398 342.54031 737.38654 342.54031 c
675.81659 342.54031 l
669.18915 342.54031 663.81659 347.9129 663.81659 354.54031 c
663.81659 412.03311 l
663.81659 418.66052 669.18915 424.03311 675.81659 424.03311 c
h
W*
0 0 750 593 rc
658.81659 429.03311 m
754.38654 429.03311 l
754.38654 337.54031 l
658.81659 337.54031 l
h
f
Q
0.50491601 0.50491601 0.50491601 sc
q
675.81659 539.4928 m
737.38654 539.4928 l
744.01398 539.4928 749.38654 534.12024 749.38654 527.4928 c
749.38654 470 l
749.38654 463.37259 744.01398 458 737.38654 458 c
675.81659 458 l
669.18915 458 663.81659 463.37259 663.81659 470 c
663.81659 527.4928 l
663.81659 534.12024 669.18915 539.4928 675.81659 539.4928 c
h
W*
0 0 750 593 rc
658.81659 544.4928 m
754.38654 544.4928 l
754.38654 453 l
658.81659 453 l
h
f
Q
0 0 0 sc
q
0 0 750 593 rc
1 0 0 -1 196.98828 56.469921 cm
/F1.1[ 25 0 0 -25 0 0]sf
51.561718 23 m
(!)s
1 0 0 -1 220.10153 253.65924 cm
/F2.1[ 25 0 0 -25 0 0]sf
56.361717 23 m
(!)s
1 0 0 -1 281.11325 498.85269 cm
/F2.1[ 18 0 0 -18 0 0]sf
54.164719 17 m
("#)[ 11.304000 0.000000 ] xS
1 0 0 -1 111.05466 498.85269 cm
54.164719 17 m
("#)[ 11.304000 0.000000 ] xS
1 0 0 -1 195.91403 482.95715 cm
/F1.1[ 25 0 0 -25 0 0]sf
53.636719 23 m
(")s
1 0 0 -1 195.91403 565.5 cm
53.986717 23 m
(#)s
1 0 0 -1 366.12497 482.95715 cm
53.636719 23 m
(")s
1 0 0 -1 25.902317 482.95715 cm
53.636719 23 m
(")s
1 0 0 -1 643.58984 56.469921 cm
54.16172 23 m
($)s
1 0 0 -1 643.58984 285.72351 cm
54.16172 23 m
($)s
1 0 0 -1 643.58984 169.351 cm
54.16172 23 m
($)s
1 0 0 -1 643.58984 398.60458 cm
54.16172 23 m
($)s
1 1 1 sc
1 0 0 -1 643.58984 514.06427 cm
54.16172 23 m
($)s
Q
2 w
q
0.25388044 592.37225 m
517.79688 592.37225 l
517.79688 395.03311 l
0.25388044 395.03311 l
0.25388044 592.37225 l
h
W*
0 0 750 593 rc
1 0 0 -1 0.25388044 592.37225 cm
0 0 m
517.54297 0 l
517.54297 197.33916 l
0 197.33916 l
0 0 l
h
S
Q
1 w
0.59200001 0.59200001 0.59200001 sc
q
0 0 750 593 rc
1 0 0 -1 542.48444 499.88181 cm
101.37733 1 m
0.60933149 1 l
S
0.59215689 0.59215689 0.59215689 sc
0.70710677 0.70710677 0.70710677 -0.70710677 627.07056 498.58127 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
0.59200001 0.59200001 0.59200001 sc
1 0 0 -1 317.10941 470.88181 cm
57.377331 1 m
0.6554299 1 l
S
0.59215689 0.59215689 0.59215689 sc
0.70710677 0.70710677 0.70710677 -0.70710677 357.69556 469.58127 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
-0.70710677 0.70710677 -0.70710677 -0.70710677 334.45947 469.58127 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
0.59200001 0.59200001 0.59200001 sc
1 0 0 -1 145.0508 470.88181 cm
57.377331 1 m
0.6554299 1 l
S
0.59215689 0.59215689 0.59215689 sc
0.70710677 0.70710677 0.70710677 -0.70710677 185.63695 469.58127 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
-0.70710677 0.70710677 -0.70710677 -0.70710677 162.40088 469.58127 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
0.59200001 0.59200001 0.59200001 sc
0 1 1 0 258.86459 102.08901 cm
270.37732 1 m
0.30826136 1 l
S
0.59215689 0.59215689 0.59215689 sc
-0.70710677 0.70710677 0.70710677 0.70710677 260.16513 355.67517 cm
0 11.691547 m
11.926029 11.691547 l
11.691547 0 l
S
ep
end
